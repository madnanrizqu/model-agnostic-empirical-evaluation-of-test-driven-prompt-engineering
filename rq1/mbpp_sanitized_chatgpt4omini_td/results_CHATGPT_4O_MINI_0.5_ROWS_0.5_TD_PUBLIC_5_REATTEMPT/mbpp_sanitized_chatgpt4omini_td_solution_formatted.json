[
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 2,
    "solution": "def similar_elements(test_tup1, test_tup2):\n    return set(test_tup1) & set(test_tup2)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the shared elements from the given two lists.\n\n### Signature\ndef similar_elements(test_tup1, test_tup2):\n\n### Test\nassert set(candidate((3, 4, 5, 6),(5, 7, 4, 10))) == set((4, 5))",
    "timestamp": "2025-10-17T16:15:59.521032",
    "response_time": "1.88",
    "context": "{\"function_name\": \"similar_elements\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 3,
    "solution": "def is_not_prime(n):\n    if n <= 1:\n        return True\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return True\n    return False",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to identify non-prime numbers.\n\n### Signature\ndef is_not_prime(n):\n\n### Test\nassert candidate(2) == False\nassert candidate(10) == True",
    "timestamp": "2025-10-17T16:16:01.194603",
    "response_time": "1.67",
    "context": "{\"function_name\": \"is_not_prime\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 4,
    "solution": "import heapq\n\ndef heap_queue_largest(nums, n):\n    return heapq.nlargest(n, nums)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the n largest integers from a given list of numbers, returned in descending order.\n\n### Signature\ndef heap_queue_largest(nums,n):\n\n### Test\nassert candidate( [25, 35, 22, 85, 14, 65, 75, 22, 58],3)==[85, 75, 65]",
    "timestamp": "2025-10-17T16:16:02.219137",
    "response_time": "1.02",
    "context": "{\"function_name\": \"heap_queue_largest\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 6,
    "solution": "def differ_At_One_Bit_Pos(x, y):\n    return (x ^ y) != 0 and (x ^ y) & ((x ^ y) - 1) == 0",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to check whether the two numbers differ at one bit position only or not.\n\n### Signature\ndef is_Power_Of_Two (x):\n\n### Test\nassert candidate(13,9) == True\nassert candidate(15,8) == False\nassert candidate(2,4) == False",
    "timestamp": "2025-10-17T16:16:03.625919",
    "response_time": "1.41",
    "context": "{\"function_name\": \"differ_At_One_Bit_Pos\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 7,
    "solution": "def find_char_long(text):\n    words = text.split()\n    return [word for word in words if len(word) >= 4]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find all words which are at least 4 characters long in a string.\n\n### Signature\ndef find_char_long(text):\n\n### Test\nassert set(candidate('Please move back to stream')) == set(['Please', 'move', 'back', 'stream'])",
    "timestamp": "2025-10-17T16:16:04.782928",
    "response_time": "1.16",
    "context": "{\"function_name\": \"find_char_long\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 8,
    "solution": "def square_nums(nums):\n    return [x ** 2 for x in nums]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find squares of individual elements in a list.\n\n### Signature\ndef square_nums(nums):\n\n### Test\nassert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]",
    "timestamp": "2025-10-17T16:16:05.874080",
    "response_time": "1.09",
    "context": "{\"function_name\": \"square_nums\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 9,
    "solution": "def find_Rotations(s: str) -> int:\n    n = len(s)\n    for i in range(1, n + 1):\n        if s[i:] + s[:i] == s:\n            return i\n    return n  # In case no rotation found, return n (though the prompt implies there will always be a solution)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the minimum number of rotations (greater than 0) required to get the same string.\n\n### Signature\ndef find_Rotations(str):\n\n### Test\nassert candidate(\"aaaa\") == 1",
    "timestamp": "2025-10-17T16:16:07.896253",
    "response_time": "2.02",
    "context": "{\"function_name\": \"find_Rotations\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 11,
    "solution": "def remove_Occ(s, ch):\n    first_index = s.find(ch)\n    last_index = s.rfind(ch)\n    \n    if first_index == -1 or first_index == last_index:\n        return s.replace(ch, '', 1)\n    \n    return s[:first_index] + s[first_index + 1:last_index] + s[last_index + 1:]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to remove first and last occurrence of a given character from the string.\n\n### Signature\ndef remove_Occ(s,ch):\n\n### Test\nassert candidate(\"hello\",\"l\") == \"heo\"",
    "timestamp": "2025-10-17T16:16:10.141708",
    "response_time": "2.24",
    "context": "{\"function_name\": \"remove_Occ\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 12,
    "solution": "def sort_matrix(M):\n    return sorted(M, key=sum)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to sort a given matrix in ascending order according to the sum of its rows.\n\n### Signature\ndef sort_matrix(M):\n\n### Test\nassert candidate([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]",
    "timestamp": "2025-10-17T16:16:10.909229",
    "response_time": "0.77",
    "context": "{\"function_name\": \"sort_matrix\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 14,
    "solution": "def find_Volume(l, b, h):\n    base_area = (l * b) / 2\n    volume = base_area * h\n    return volume",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the volume of a triangular prism.\n\n### Signature\ndef find_Volume(l,b,h) :\n\n### Test\nassert candidate(10,8,6) == 240",
    "timestamp": "2025-10-17T16:16:12.273253",
    "response_time": "1.36",
    "context": "{\"function_name\": \"find_Volume\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 16,
    "solution": "def text_lowercase_underscore(text):\n    return all(part.islower() for part in text.split('_')) and '_' in text",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\n\n### Signature\ndef text_lowercase_underscore(text):\n\n### Test\nassert candidate(\"aab_cbbbc\")==(True)",
    "timestamp": "2025-10-17T16:16:13.601505",
    "response_time": "1.33",
    "context": "{\"function_name\": \"text_lowercase_underscore\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 17,
    "solution": "def square_perimeter(a):\n    return 4 * a",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that returns the perimeter of a square given its side length as input.\n\n### Signature\ndef square_perimeter(a):\n\n### Test\nassert candidate(10)==40",
    "timestamp": "2025-10-17T16:16:14.500954",
    "response_time": "0.90",
    "context": "{\"function_name\": \"square_perimeter\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 18,
    "solution": "def remove_dirty_chars(string):\n    return ''.join(char for char in string if char not in string)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to remove characters from the first string which are present in the second string.\n\n### Signature\ndef str_to_list(string):\n\n### Test\nassert candidate(\"probasscurve\", \"pros\") == \"\"\"bacuve\"\"\"",
    "timestamp": "2025-10-17T16:16:16.443125",
    "response_time": "1.94",
    "context": "{\"function_name\": \"remove_dirty_chars\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 19,
    "solution": "def test_duplicate(arraynums):\n    return len(arraynums) != len(set(arraynums))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find whether a given array of integers contains any duplicate element.\n\n### Signature\ndef test_duplicate(arraynums):\n\n### Test\nassert candidate(([1,2,3,4,5]))==False",
    "timestamp": "2025-10-17T16:16:17.342243",
    "response_time": "0.90",
    "context": "{\"function_name\": \"test_duplicate\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 20,
    "solution": "def is_woodall(x):\n    if x < 1:\n        return False\n    woodall_numbers = []\n    n = 1\n    while True:\n        woodall_number = (1 << n) - n - 1  # 2^n - n - 1\n        if woodall_number > x:\n            break\n        woodall_numbers.append(woodall_number)\n        n += 1\n    return x in woodall_numbers",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to check if the given number is woodball or not.\n\n### Signature\ndef is_woodall(x):\n\n### Test\nassert candidate(383) == True",
    "timestamp": "2025-10-17T16:16:19.740421",
    "response_time": "2.40",
    "context": "{\"function_name\": \"is_woodall\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 56,
    "solution": "def check(num):\n    reversed_num = int(str(num)[::-1])\n    return num == 2 * reversed_num - 1",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to check if a given number is one less than twice its reverse.\n\n### Signature\ndef rev(num):\n\n### Test\nassert candidate(70) == False",
    "timestamp": "2025-10-17T16:16:21.197686",
    "response_time": "1.46",
    "context": "{\"function_name\": \"check\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 57,
    "solution": "def find_Max_Num(arr):\n    # Convert the list of digits to strings for sorting\n    arr_str = list(map(str, arr))\n    # Sort the strings in descending order based on their concatenation\n    arr_str.sort(key=lambda x: x*10, reverse=True)\n    # Join the sorted strings and convert back to an integer\n    return int(''.join(arr_str))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the largest number that can be formed with the given list of digits.\n\n### Signature\ndef find_Max_Num(arr) :\n\n### Test\nassert candidate([1,2,3]) == 321",
    "timestamp": "2025-10-17T16:16:23.736872",
    "response_time": "2.54",
    "context": "{\"function_name\": \"find_Max_Num\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 58,
    "solution": "def opposite_Signs(x, y):\n    return (x < 0) != (y < 0)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to check whether the given two integers have opposite sign or not.\n\n### Signature\ndef opposite_Signs(x,y):\n\n### Test\nassert candidate(1,-2) == True\nassert candidate(3,2) == False",
    "timestamp": "2025-10-17T16:16:25.171127",
    "response_time": "1.43",
    "context": "{\"function_name\": \"opposite_Signs\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 59,
    "solution": "def is_octagonal(n):\n    return n * (3 * n - 2)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the nth octagonal number.\n\n### Signature\ndef is_octagonal(n):\n\n### Test\nassert candidate(5) == 65",
    "timestamp": "2025-10-17T16:16:26.254752",
    "response_time": "1.08",
    "context": "{\"function_name\": \"is_octagonal\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 61,
    "solution": "def count_Substrings(s):\n    count = 0\n    n = len(s)\n    \n    for length in range(1, n + 1):\n        for start in range(n - length + 1):\n            substring = s[start:start + length]\n            digit_sum = sum(int(char) for char in substring)\n            if digit_sum == length:\n                count += 1\n                \n    return count",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to count the number of substrings with the sum of digits equal to their length.\n\n### Signature\ndef count_Substrings(s):\n\n### Test\nassert candidate('112112') == 6",
    "timestamp": "2025-10-17T16:16:28.794326",
    "response_time": "2.54",
    "context": "{\"function_name\": \"count_Substrings\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 62,
    "solution": "def smallest_num(xs):\n    if not xs:\n        return None\n    smallest = xs[0]\n    for num in xs:\n        if num < smallest:\n            smallest = num\n    return smallest",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find smallest number in a list.\n\n### Signature\ndef smallest_num(xs):\n\n### Test\nassert candidate([10, 20, 1, 45, 99]) == 1",
    "timestamp": "2025-10-17T16:16:30.581020",
    "response_time": "1.79",
    "context": "{\"function_name\": \"smallest_num\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 63,
    "solution": "def max_difference(test_list):\n    max_diff = 0\n    for a, b in test_list:\n        diff = abs(a - b)\n        if diff > max_diff:\n            max_diff = diff\n    return max_diff",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the maximum difference between available pairs in the given tuple list.\n\n### Signature\ndef max_difference(test_list):\n\n### Test\nassert candidate([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7",
    "timestamp": "2025-10-17T16:16:32.653903",
    "response_time": "2.07",
    "context": "{\"function_name\": \"max_difference\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 64,
    "solution": "def subject_marks(subjectmarks):\n    return sorted(subjectmarks, key=lambda x: x)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to sort a list of tuples using the second value of each tuple.\n\n### Signature\ndef subject_marks(subjectmarks):\n\n### Test\nassert candidate([('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])==[('Social sciences', 82), ('English', 88), ('Science', 90), ('Maths', 97)]",
    "timestamp": "2025-10-17T16:16:33.607648",
    "response_time": "0.95",
    "context": "{\"function_name\": \"subject_marks\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 65,
    "solution": "def recursive_list_sum(data_list):\n    total = 0\n    for item in data_list:\n        if isinstance(item, list):\n            total += recursive_list_sum(item)\n        else:\n            total += item\n    return total",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to flatten a list and sum all of its elements.\n\n### Signature\ndef recursive_list_sum(data_list):\n\n### Test\nassert candidate(([1, 2, [3,4],[5,6]]))==21",
    "timestamp": "2025-10-17T16:16:35.298318",
    "response_time": "1.69",
    "context": "{\"function_name\": \"recursive_list_sum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 66,
    "solution": "def pos_count(lst):\n    return sum(1 for x in lst if x > 0)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to count the number of positive numbers in a list.\n\n### Signature\ndef pos_count(list):\n\n### Test\nassert candidate([1,-2,3,-4]) == 2",
    "timestamp": "2025-10-17T16:16:36.607496",
    "response_time": "1.31",
    "context": "{\"function_name\": \"pos_count\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 67,
    "solution": "def bell_number(n):\n    bell = [[0 for _ in range(n + 1)] for _ in range(n + 1)]\n    bell[0][0] = 1\n\n    for i in range(1, n + 1):\n        bell[i][0] = bell[i - 1][i - 1]\n        for j in range(1, i + 1):\n            bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]\n\n    return bell[n][0]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the number of ways to partition a set of Bell numbers.\n\n### Signature\ndef bell_number(n):\n\n### Test\nassert candidate(2)==2",
    "timestamp": "2025-10-17T16:16:39.351568",
    "response_time": "2.74",
    "context": "{\"function_name\": \"bell_number\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 68,
    "solution": "def is_Monotonic(A):\n    if not A:\n        return True\n    \n    increasing = decreasing = True\n    \n    for i in range(1, len(A)):\n        if A[i] > A[i - 1]:\n            decreasing = False\n        elif A[i] < A[i - 1]:\n            increasing = False\n            \n    return increasing or decreasing",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to check whether the given array is monotonic or not.\n\n### Signature\ndef is_Monotonic(A):\n\n### Test\nassert candidate([6, 5, 4, 4]) == True",
    "timestamp": "2025-10-17T16:16:41.623119",
    "response_time": "2.27",
    "context": "{\"function_name\": \"is_Monotonic\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 69,
    "solution": "def is_sublist(l, s):\n    len_l = len(l)\n    len_s = len(s)\n    \n    for i in range(len_l - len_s + 1):\n        if l[i:i + len_s] == s:\n            return True\n    return False",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to check whether a list contains the given sublist or not.\n\n### Signature\ndef is_sublist(l, s):\n\n### Test\nassert candidate([2,4,3,5,7],[3,7])==False",
    "timestamp": "2025-10-17T16:16:43.508140",
    "response_time": "1.88",
    "context": "{\"function_name\": \"is_sublist\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 70,
    "solution": "def get_equal(Input):\n    if not Input:\n        return True\n    length = len(Input[0])\n    return all(len(t) == length for t in Input)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find whether all the given tuples have equal length or not.\n\n### Signature\ndef find_equal_tuple(Input):\n\n### Test\nassert candidate([(11, 22, 33), (44, 55, 66)]) == True",
    "timestamp": "2025-10-17T16:16:44.696391",
    "response_time": "1.19",
    "context": "{\"function_name\": \"get_equal\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 71,
    "solution": "def comb_sort(nums):\n    gap = len(nums)\n    shrink = 1.3\n    sorted = False\n\n    while not sorted:\n        gap = int(gap / shrink)\n        if gap < 1:\n            gap = 1\n        sorted = True\n\n        for i in range(len(nums) - gap):\n            if nums[i] > nums[i + gap]:\n                nums[i], nums[i + gap] = nums[i + gap], nums[i]\n                sorted = False\n\n    return nums",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to sort a list of elements.\n\n### Signature\ndef comb_sort(nums):\n\n### Test\nassert candidate([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79]",
    "timestamp": "2025-10-17T16:16:47.642726",
    "response_time": "2.95",
    "context": "{\"function_name\": \"comb_sort\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 72,
    "solution": "def dif_Square(n):\n    return n % 4 == 0 or n % 4 == 1",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to check whether the given number can be represented as the difference of two squares or not.\n\n### Signature\ndef dif_Square(n):\n\n### Test\nassert candidate(5) == True",
    "timestamp": "2025-10-17T16:16:49.287528",
    "response_time": "1.64",
    "context": "{\"function_name\": \"dif_Square\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 74,
    "solution": "def is_samepatterns(colors, patterns):\n    if len(colors) != len(patterns):\n        return False\n    \n    color_to_pattern = {}\n    pattern_to_color = {}\n    \n    for color, pattern in zip(colors, patterns):\n        if color in color_to_pattern:\n            if color_to_pattern[color] != pattern:\n                return False\n        else:\n            color_to_pattern[color] = pattern\n        \n        if pattern in pattern_to_color:\n            if pattern_to_color[pattern] != color:\n                return False\n        else:\n            pattern_to_color[pattern] = color\n            \n    return True",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to check whether it follows the sequence given in the patterns array.\n\n### Signature\ndef is_samepatterns(colors, patterns):\n\n### Test\nassert candidate([\"red\",\"green\",\"green\"], [\"a\", \"b\", \"b\"])==True",
    "timestamp": "2025-10-17T16:16:51.970217",
    "response_time": "2.68",
    "context": "{\"function_name\": \"is_samepatterns\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 75,
    "solution": "def find_tuples(test_list, K):\n    return [tup for tup in test_list if all(x % K == 0 for x in tup)]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find tuples which have all elements divisible by k from the given list of tuples.\n\n### Signature\ndef find_tuples(test_list, K):\n\n### Test\nassert candidate([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == [(6, 24, 12)]",
    "timestamp": "2025-10-17T16:16:53.194088",
    "response_time": "1.22",
    "context": "{\"function_name\": \"find_tuples\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 77,
    "solution": "def is_Diff(n):\n    return n % 11 == 0",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find whether a number is divisible by 11.\n\n### Signature\ndef is_Diff(n):\n\n### Test\nassert candidate (12345) == False",
    "timestamp": "2025-10-17T16:16:54.053528",
    "response_time": "0.86",
    "context": "{\"function_name\": \"is_Diff\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 79,
    "solution": "def word_len(s):\n    return len(s) % 2 != 0",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to check whether the length of the word is odd or not.\n\n### Signature\ndef word_len(s):\n\n### Test\nassert candidate(\"Hadoop\") == False",
    "timestamp": "2025-10-17T16:16:55.052695",
    "response_time": "1.00",
    "context": "{\"function_name\": \"word_len\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 80,
    "solution": "def tetrahedral_number(n):\n    return n * (n + 1) * (n + 2) // 6",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the nth tetrahedral number.\n\n### Signature\ndef tetrahedral_number(n):\n\n### Test\nassert candidate(5) == 35",
    "timestamp": "2025-10-17T16:16:56.379830",
    "response_time": "1.33",
    "context": "{\"function_name\": \"tetrahedral_number\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 82,
    "solution": "import math\n\ndef volume_sphere(r):\n    return (4/3) * math.pi * (r ** 3)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the volume of a sphere.\n\n### Signature\ndef volume_sphere(r):\n\n### Test\nassert math.isclose(candidate(10), 4188.790204786391, rel_tol=0.001)",
    "timestamp": "2025-10-17T16:16:57.612335",
    "response_time": "1.23",
    "context": "{\"function_name\": \"volume_sphere\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 83,
    "solution": "def get_Char(strr):\n    total_ascii = sum(ord(char) for char in strr)\n    return chr((total_ascii % 26) + ord('a'))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\n\n### Signature\ndef get_Char(strr):\n\n### Test\nassert candidate(\"abc\") == \"f\"",
    "timestamp": "2025-10-17T16:16:59.187836",
    "response_time": "1.57",
    "context": "{\"function_name\": \"get_Char\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 84,
    "solution": "def sequence(n):\n    if n < 1:\n        return None\n    if n <= 2:\n        return 1\n    seq = [0] * (n + 1)\n    seq[1], seq[2] = 1, 1\n    for i in range(3, n + 1):\n        seq[i] = seq[seq[i - 1]] + seq[i - seq[i - 1]]\n    return seq[n]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the nth number in the newman conway sequence.\n\n### Signature\ndef sequence(n):\n\n### Test\nassert candidate(10) == 6",
    "timestamp": "2025-10-17T16:17:01.452970",
    "response_time": "2.26",
    "context": "{\"function_name\": \"sequence\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 85,
    "solution": "import math\n\ndef surfacearea_sphere(r):\n    return 4 * math.pi * r ** 2",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the surface area of a sphere.\n\n### Signature\ndef surfacearea_sphere(r):\n\n### Test\nassert math.isclose(candidate(10), 1256.6370614359173, rel_tol=0.001)",
    "timestamp": "2025-10-17T16:17:02.473920",
    "response_time": "1.02",
    "context": "{\"function_name\": \"surfacearea_sphere\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 86,
    "solution": "def centered_hexagonal_number(n):\n    if n < 1:\n        return 0\n    return 3 * n * (n - 1) + 1",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find nth centered hexagonal number.\n\n### Signature\ndef centered_hexagonal_number(n):\n\n### Test\nassert candidate(10) == 271",
    "timestamp": "2025-10-17T16:17:04.028021",
    "response_time": "1.55",
    "context": "{\"function_name\": \"centered_hexagonal_number\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 87,
    "solution": "def merge_dictionaries_three(dict1, dict2, dict3):\n    merged_dict = {**dict1, **dict2, **dict3}\n    return merged_dict",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to merge three dictionaries into a single dictionary.\n\n### Signature\ndef merge_dictionaries_three(dict1,dict2, dict3):\n\n### Test\nassert candidate({ \"R\": \"Red\", \"B\": \"Black\", \"P\": \"Pink\" }, { \"G\": \"Green\", \"W\": \"White\" },{ \"O\": \"Orange\", \"W\": \"White\", \"B\": \"Black\" })=={\"\"\"B\"\"\": \"\"\"Black\"\"\", \"\"\"R\"\"\": \"\"\"Red\"\"\", \"\"\"P\"\"\": \"\"\"Pink\"\"\", \"\"\"G\"\"\": \"\"\"Green\"\"\", \"\"\"W\"\"\": \"\"\"White\"\"\", \"\"\"O\"\"\": \"\"\"Orange\"\"\"}",
    "timestamp": "2025-10-17T16:17:05.517524",
    "response_time": "1.49",
    "context": "{\"function_name\": \"merge_dictionaries_three\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 88,
    "solution": "def freq_count(list1):\n    frequency = {}\n    for item in list1:\n        if item in frequency:\n            frequency[item] += 1\n        else:\n            frequency[item] = 1\n    return frequency",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to get the frequency of all the elements in a list, returned as a dictionary.\n\n### Signature\ndef freq_count(list1):\n\n### Test\nassert candidate([10,10,10,10,20,20,20,20,40,40,50,50,30])==({10: 4, 20: 4, 40: 2, 50: 2, 30: 1})",
    "timestamp": "2025-10-17T16:17:07.290842",
    "response_time": "1.77",
    "context": "{\"function_name\": \"freq_count\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 89,
    "solution": "def closest_num(N):\n    return N - 1",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the closest smaller number than n.\n\n### Signature\ndef closest_num(N):\n\n### Test\nassert candidate(11) == 10",
    "timestamp": "2025-10-17T16:17:08.401288",
    "response_time": "1.11",
    "context": "{\"function_name\": \"closest_num\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 90,
    "solution": "def len_log(list1):\n    return max(len(word) for word in list1)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the length of the longest word.\n\n### Signature\ndef len_log(list1):\n\n### Test\nassert candidate([\"python\",\"PHP\",\"bigdata\"]) == 7",
    "timestamp": "2025-10-17T16:17:09.490721",
    "response_time": "1.09",
    "context": "{\"function_name\": \"len_log\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 91,
    "solution": "def find_substring(str1, sub_str):\n    for s in str1:\n        if sub_str in s:\n            return True\n    return False",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to check if a string is present as a substring in a given list of string values.\n\n### Signature\ndef find_substring(str1, sub_str):\n\n### Test\nassert candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"],\"ack\")==True",
    "timestamp": "2025-10-17T16:17:11.025748",
    "response_time": "1.53",
    "context": "{\"function_name\": \"find_substring\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 92,
    "solution": "def is_undulating(n):\n    s = str(n)\n    return all(s[i] != s[i + 1] for i in range(len(s) - 1))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to check whether the given number is undulating or not.\n\n### Signature\ndef is_undulating(n):\n\n### Test\nassert candidate(1212121) == True",
    "timestamp": "2025-10-17T16:17:12.673103",
    "response_time": "1.65",
    "context": "{\"function_name\": \"is_undulating\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 93,
    "solution": "def power(a, b):\n    return a ** b",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to calculate the value of 'a' to the power 'b'.\n\n### Signature\ndef power(a,b):\n\n### Test\nassert candidate(3,4) == 81",
    "timestamp": "2025-10-17T16:17:13.903400",
    "response_time": "1.23",
    "context": "{\"function_name\": \"power\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 94,
    "solution": "def index_minimum(test_list):\n    return min(test_list, key=lambda x: x[1])[0]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nGiven a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n\n### Signature\ndef index_minimum(test_list):\n\n### Test\nassert candidate([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'",
    "timestamp": "2025-10-17T16:17:15.189345",
    "response_time": "1.29",
    "context": "{\"function_name\": \"index_minimum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 95,
    "solution": "def Find_Min_Length(lst):\n    if not lst:\n        return 0\n    return min(len(sublist) for sublist in lst)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the length of the smallest list in a list of lists.\n\n### Signature\ndef Find_Min_Length(lst):\n\n### Test\nassert candidate([[1],[1,2]]) == 1",
    "timestamp": "2025-10-17T16:17:16.701773",
    "response_time": "1.51",
    "context": "{\"function_name\": \"Find_Min_Length\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 96,
    "solution": "def divisor(n):\n    count = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            count += 1\n    return count",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the number of divisors of a given integer.\n\n### Signature\ndef divisor(n):\n\n### Test\nassert candidate(15) == 4",
    "timestamp": "2025-10-17T16:17:18.377606",
    "response_time": "1.67",
    "context": "{\"function_name\": \"divisor\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 97,
    "solution": "def frequency_lists(list1):\n    frequency = {}\n    for sublist in list1:\n        for item in sublist:\n            if item in frequency:\n                frequency[item] += 1\n            else:\n                frequency[item] = 1\n    return frequency",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n\n### Signature\ndef frequency_lists(list1):\n\n### Test\nassert candidate([[1, 2, 3, 2], [4, 5, 6, 2], [7, 8, 9, 5]])=={1: 1, 2: 3, 3: 1, 4: 1, 5: 2, 6: 1, 7: 1, 8: 1, 9: 1}",
    "timestamp": "2025-10-17T16:17:20.487892",
    "response_time": "2.11",
    "context": "{\"function_name\": \"frequency_lists\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 98,
    "solution": "import math\n\ndef multiply_num(numbers):\n    product = 1\n    for number in numbers:\n        product *= number\n    return product / len(numbers)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to multiply all the numbers in a list and divide with the length of the list.\n\n### Signature\ndef multiply_num(numbers):\n\n### Test\nassert math.isclose(candidate((8, 2, 3, -1, 7)), -67.2, rel_tol=0.001)",
    "timestamp": "2025-10-17T16:17:21.888353",
    "response_time": "1.40",
    "context": "{\"function_name\": \"multiply_num\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 99,
    "solution": "def decimal_to_binary(n):\n    if n == 0:\n        return '0'\n    binary = ''\n    while n > 0:\n        binary = str(n % 2) + binary\n        n //= 2\n    return binary",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n\n### Signature\ndef decimal_to_binary(n):\n\n### Test\nassert candidate(8) == '1000'",
    "timestamp": "2025-10-17T16:17:23.605615",
    "response_time": "1.72",
    "context": "{\"function_name\": \"decimal_to_binary\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 100,
    "solution": "def next_smallest_palindrome(num):\n    def is_palindrome(n):\n        return str(n) == str(n)[::-1]\n\n    num += 1  # Start searching from the next number\n    while not is_palindrome(num):\n        num += 1\n    return num",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the next smallest palindrome of a specified integer, returned as an integer.\n\n### Signature\ndef next_smallest_palindrome(num):\n\n### Test\nassert candidate(99)==101",
    "timestamp": "2025-10-17T16:17:25.752827",
    "response_time": "2.15",
    "context": "{\"function_name\": \"next_smallest_palindrome\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 101,
    "solution": "def kth_element(arr, k):\n    if k < 1 or k > len(arr):\n        return None\n    return arr[k - 1]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the kth element in the given array using 1-based indexing.\n\n### Signature\ndef kth_element(arr, k):\n\n### Test\nassert candidate([12,3,5,7,19], 2) == 3",
    "timestamp": "2025-10-17T16:17:27.175184",
    "response_time": "1.42",
    "context": "{\"function_name\": \"kth_element\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 102,
    "solution": "def snake_to_camel(word):\n    components = word.split('_')\n    return ''.join(x.capitalize() for x in components)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to convert a snake case string to camel case string.\n\n### Signature\ndef snake_to_camel(word):\n\n### Test\nassert candidate('python_program')=='PythonProgram'",
    "timestamp": "2025-10-17T16:17:28.487758",
    "response_time": "1.31",
    "context": "{\"function_name\": \"snake_to_camel\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 103,
    "solution": "def eulerian_num(n, m):\n    if n == 0 and m == 0:\n        return 1\n    if n == 0 or m < 0 or m > n:\n        return 0\n    return m * eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the Eulerian number a(n, m).\n\n### Signature\ndef eulerian_num(n, m):\n\n### Test\nassert candidate(3, 1) == 4",
    "timestamp": "2025-10-17T16:17:31.475269",
    "response_time": "2.99",
    "context": "{\"function_name\": \"eulerian_num\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 104,
    "solution": "def sort_sublists(input_list):\n    return [sorted(sublist) for sublist in input_list]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to sort each sublist of strings in a given list of lists.\n\n### Signature\ndef sort_sublists(input_list):\n\n### Test\nassert candidate(([\"green\", \"orange\"], [\"black\", \"white\"], [\"white\", \"black\", \"orange\"]))==[[\"\"\"green\"\"\", \"\"\"orange\"\"\"], [\"\"\"black\"\"\", \"\"\"white\"\"\"], [\"\"\"black\"\"\", \"\"\"orange\"\"\", \"\"\"white\"\"\"]]",
    "timestamp": "2025-10-17T16:17:32.398147",
    "response_time": "0.92",
    "context": "{\"function_name\": \"sort_sublists\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 105,
    "solution": "def count(lst):\n    return sum(1 for item in lst if item is True)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to count true booleans in the given list.\n\n### Signature\ndef count(lst):\n\n### Test\nassert candidate([True,False,True]) == 2",
    "timestamp": "2025-10-17T16:17:33.331426",
    "response_time": "0.93",
    "context": "{\"function_name\": \"count\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 106,
    "solution": "def add_lists(test_list, test_tup):\n    return test_tup + tuple(test_list)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to append the given list to the given tuples.\n\n### Signature\ndef add_lists(test_list, test_tup):\n\n### Test\nassert candidate([5, 6, 7], (9, 10)) == (9, 10, 5, 6, 7)",
    "timestamp": "2025-10-17T16:17:34.757202",
    "response_time": "1.42",
    "context": "{\"function_name\": \"add_lists\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 108,
    "solution": "def merge_sorted_list(num1, num2, num3):\n    merged_list = num1 + num2 + num3\n    return sorted(merged_list)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to merge three lists into a single sorted list.\n\n### Signature\ndef merge_sorted_list(num1,num2,num3):\n\n### Test\nassert candidate([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[24, 26, 54, 48])==[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]",
    "timestamp": "2025-10-17T16:17:36.124096",
    "response_time": "1.37",
    "context": "{\"function_name\": \"merge_sorted_list\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 109,
    "solution": "def odd_Equivalent(s, n):\n    count = 0\n    length = len(s)\n    \n    for i in range(n):\n        rotated = s[i % length:] + s[:i % length]\n        if int(rotated, 2) % 2 == 1:\n            count += 1\n            \n    return count",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\n\n### Signature\ndef odd_Equivalent(s,n):\n\n### Test\nassert candidate(\"011001\",6) == 3",
    "timestamp": "2025-10-17T16:17:38.474504",
    "response_time": "2.35",
    "context": "{\"function_name\": \"odd_Equivalent\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 111,
    "solution": "def common_in_nested_lists(nestedlist):\n    if not nestedlist:\n        return []\n    \n    common_elements = set(nestedlist[0])\n    \n    for sublist in nestedlist[1:]:\n        common_elements.intersection_update(sublist)\n    \n    return list(common_elements)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the common elements in given nested lists.\n\n### Signature\ndef common_in_nested_lists(nestedlist):\n\n### Test\nassert set(candidate([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8, 12, 15, 16, 18]]))==set([18, 12])",
    "timestamp": "2025-10-17T16:17:40.117909",
    "response_time": "1.64",
    "context": "{\"function_name\": \"common_in_nested_lists\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 113,
    "solution": "def check_integer(text):\n    try:\n        int(text)\n        return True\n    except ValueError:\n        return False",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to check if a string represents an integer or not.\n\n### Signature\ndef check_integer(text):\n\n### Test\nassert candidate(\"python\")==False",
    "timestamp": "2025-10-17T16:17:41.502593",
    "response_time": "1.38",
    "context": "{\"function_name\": \"check_integer\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 115,
    "solution": "def empty_dit(list1):\n    return all(not d for d in list1)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to check whether all dictionaries in a list are empty or not.\n\n### Signature\ndef empty_dit(list1):\n\n### Test\nassert candidate([{},{},{}])==True",
    "timestamp": "2025-10-17T16:17:42.594846",
    "response_time": "1.09",
    "context": "{\"function_name\": \"empty_dit\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 116,
    "solution": "def tuple_to_int(nums):\n    return int(''.join(map(str, nums)))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to convert a given tuple of positive integers into a single integer.\n\n### Signature\ndef tuple_to_int(nums):\n\n### Test\nassert candidate((1,2,3))==123",
    "timestamp": "2025-10-17T16:17:43.783597",
    "response_time": "1.19",
    "context": "{\"function_name\": \"tuple_to_int\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 117,
    "solution": "def list_to_float(test_list):\n    return [tuple(float(x) for x in sublist) for sublist in test_list]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to convert all possible convertible elements in a list of lists to floats.\n\n### Signature\ndef list_to_float(test_list):\n\n### Test\nassert candidate( [(\"3\", \"4\"), (\"1\", \"26.45\"), (\"7.32\", \"8\"), (\"4\", \"8\")] ) == [(3.0, 4.0), (1.0, 26.45), (7.32, 8.0), (4.0, 8.0)]",
    "timestamp": "2025-10-17T16:17:45.468135",
    "response_time": "1.68",
    "context": "{\"function_name\": \"list_to_float\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 118,
    "solution": "def string_to_list(string):\n    return string.split(\" \")",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to convert a string to a list of strings split on the space character.\n\n### Signature\ndef string_to_list(string):\n\n### Test\nassert candidate(\"python programming\")==[\"\"\"python\"\"\",\"\"\"programming\"\"\"]",
    "timestamp": "2025-10-17T16:17:46.358656",
    "response_time": "0.89",
    "context": "{\"function_name\": \"string_to_list\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 119,
    "solution": "def search(arr):\n    left, right = 0, len(arr) - 1\n    \n    while left < right:\n        mid = left + (right - left) // 2\n        # Check if mid is even or odd\n        if mid % 2 == 0:\n            if arr[mid] == arr[mid + 1]:\n                left = mid + 2\n            else:\n                right = mid\n        else:\n            if arr[mid] == arr[mid - 1]:\n                left = mid + 1\n            else:\n                right = mid\n    \n    return arr[left]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the element that appears only once in a sorted array.\n\n### Signature\ndef search(arr):\n\n### Test\nassert candidate([1,1,2,2,3]) == 3",
    "timestamp": "2025-10-17T16:17:49.347161",
    "response_time": "2.99",
    "context": "{\"function_name\": \"search\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 120,
    "solution": "def max_product_tuple(list1):\n    max_product = 0\n    for a, b in list1:\n        product = abs(a * b)\n        if product > max_product:\n            max_product = product\n    return max_product",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\n\n### Signature\ndef max_product_tuple(list1):\n\n### Test\nassert candidate([(2, 7), (2, 6), (1, 8), (4, 9)] )==36",
    "timestamp": "2025-10-17T16:17:50.968686",
    "response_time": "1.62",
    "context": "{\"function_name\": \"max_product_tuple\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 123,
    "solution": "def amicable_numbers_sum(limit):\n    def sum_of_divisors(n):\n        total = 1\n        for i in range(2, int(n**0.5) + 1):\n            if n % i == 0:\n                total += i\n                if i != n // i:\n                    total += n // i\n        return total\n\n    amicable_numbers = set()\n    for num in range(2, limit + 1):\n        if num not in amicable_numbers:\n            partner = sum_of_divisors(num)\n            if partner != num and sum_of_divisors(partner) == num:\n                amicable_numbers.add(num)\n                amicable_numbers.add(partner)\n\n    return sum(amicable_numbers)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to sum all amicable numbers from 1 to a specified number.\n\n### Signature\ndef amicable_numbers_sum(limit):\n\n### Test\nassert candidate(999)==504",
    "timestamp": "2025-10-17T16:17:54.343844",
    "response_time": "3.37",
    "context": "{\"function_name\": \"amicable_numbers_sum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 124,
    "solution": "import math\n\ndef angle_complex(a, b):\n    return math.atan2(b.imag, b.real)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to get the angle of a complex number.\n\n### Signature\ndef angle_complex(a,b):\n\n### Test\nassert math.isclose(candidate(0,1j), 1.5707963267948966, rel_tol=0.001)",
    "timestamp": "2025-10-17T16:17:55.498137",
    "response_time": "1.15",
    "context": "{\"function_name\": \"angle_complex\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 125,
    "solution": "def find_length(string):\n    max_diff = 0\n    current_diff = 0\n    \n    for char in string:\n        if char == '0':\n            current_diff += 1\n        else:\n            current_diff -= 1\n        \n        if current_diff < 0:\n            current_diff = 0\n        \n        max_diff = max(max_diff, current_diff)\n    \n    return max_diff",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\n### Signature\ndef find_length(string):\n\n### Test\nassert candidate(\"11000010001\") == 6",
    "timestamp": "2025-10-17T16:17:57.298813",
    "response_time": "1.80",
    "context": "{\"function_name\": \"find_length\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 126,
    "solution": "def sum(a, b):\n    def gcd(x, y):\n        while y:\n            x, y = y, x % y\n        return x\n\n    common_divisors_sum = 0\n    g = gcd(a, b)\n    \n    for i in range(1, g + 1):\n        if g % i == 0:\n            common_divisors_sum += i\n            \n    return common_divisors_sum",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the sum of common divisors of two given numbers.\n\n### Signature\ndef sum(a,b):\n\n### Test\nassert candidate(10,15) == 6",
    "timestamp": "2025-10-17T16:18:00.032642",
    "response_time": "2.73",
    "context": "{\"function_name\": \"sum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 127,
    "solution": "def multiply_int(x, y):\n    return x * y",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to multiply two integers.\n\n### Signature\ndef multiply_int(x, y):\n\n### Test\nassert candidate(10,20)==200",
    "timestamp": "2025-10-17T16:18:00.897123",
    "response_time": "0.86",
    "context": "{\"function_name\": \"multiply_int\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 128,
    "solution": "def long_words(n, str):\n    words = str.split()\n    return [word for word in words if len(word) > n]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find words that are longer than n characters from a given list of words.\n\n### Signature\ndef long_words(n, str):\n\n### Test\nassert candidate(3,\"python is a programming language\")==[\"\"\"python\"\"\",\"\"\"programming\"\"\",\"\"\"language\"\"\"]",
    "timestamp": "2025-10-17T16:18:02.170700",
    "response_time": "1.27",
    "context": "{\"function_name\": \"long_words\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 129,
    "solution": "def magic_square_test(my_matrix):\n    n = len(my_matrix)\n    magic_sum = n * (n**2 + 1) // 2\n\n    # Check rows and columns\n    for i in range(n):\n        if sum(my_matrix[i]) != magic_sum:\n            return False\n        if sum(my_matrix[j][i] for j in range(n)) != magic_sum:\n            return False\n\n    # Check diagonals\n    if sum(my_matrix[i][i] for i in range(n)) != magic_sum:\n        return False\n    if sum(my_matrix[i][n - 1 - i] for i in range(n)) != magic_sum:\n        return False\n\n    return True",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to calculate whether the matrix is a magic square.\n\n### Signature\ndef magic_square_test(my_matrix):\n\n### Test\nassert candidate([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True",
    "timestamp": "2025-10-17T16:18:05.577721",
    "response_time": "3.41",
    "context": "{\"function_name\": \"magic_square_test\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 130,
    "solution": "from collections import Counter\n\ndef max_occurrences(nums):\n    if not nums:\n        return None\n    count = Counter(nums)\n    return max(count, key=count.get)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the item with maximum frequency in a given list.\n\n### Signature\ndef max_occurrences(nums):\n\n### Test\nassert candidate([2,3,8,4,7,9,8,2,6,5,1,6,1,2,3,2,4,6,9,1,2])==2",
    "timestamp": "2025-10-17T16:18:06.702943",
    "response_time": "1.12",
    "context": "{\"function_name\": \"max_occurrences\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 131,
    "solution": "def reverse_vowels(str1):\n    vowels = \"aeiouAEIOU\"\n    str_list = list(str1)\n    left, right = 0, len(str_list) - 1\n\n    while left < right:\n        if str_list[left] in vowels and str_list[right] in vowels:\n            str_list[left], str_list[right] = str_list[right], str_list[left]\n            left += 1\n            right -= 1\n        if str_list[left] not in vowels:\n            left += 1\n        if str_list[right] not in vowels:\n            right -= 1\n\n    return ''.join(str_list)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to reverse only the vowels of a given string (where y is not a vowel).\n\n### Signature\ndef reverse_vowels(str1):\n\n### Test\nassert candidate(\"Python\") == \"Python\"",
    "timestamp": "2025-10-17T16:18:11.095237",
    "response_time": "4.39",
    "context": "{\"function_name\": \"reverse_vowels\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 132,
    "solution": "def tup_string(tup1):\n    return ''.join(tup1)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to convert a tuple to a string.\n\n### Signature\ndef tup_string(tup1):\n\n### Test\nassert candidate((\"\"\"e\"\"\", \"\"\"x\"\"\", \"\"\"e\"\"\", \"\"\"r\"\"\", \"\"\"c\"\"\", \"\"\"i\"\"\", \"\"\"s\"\"\", \"\"\"e\"\"\", \"\"\"s\"\"\"))==(\"exercises\")",
    "timestamp": "2025-10-17T16:18:12.264230",
    "response_time": "1.17",
    "context": "{\"function_name\": \"tup_string\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 133,
    "solution": "def sum_negativenum(nums):\n    return sum(num for num in nums if num < 0)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\n### Signature\ndef sum_negativenum(nums):\n\n### Test\nassert candidate([2, 4, -6, -9, 11, -12, 14, -5, 17])==-32",
    "timestamp": "2025-10-17T16:18:13.229654",
    "response_time": "0.96",
    "context": "{\"function_name\": \"sum_negativenum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 135,
    "solution": "def hexagonal_num(n):\n    return n * (2 * n - 1)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the nth hexagonal number.\n\n### Signature\ndef hexagonal_num(n):\n\n### Test\nassert candidate(10) == 190",
    "timestamp": "2025-10-17T16:18:14.343582",
    "response_time": "1.11",
    "context": "{\"function_name\": \"hexagonal_num\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 137,
    "solution": "import math\n\ndef zero_count(nums):\n    zeroes = sum(1 for num in nums if num == 0)\n    non_zeroes = sum(1 for num in nums if num != 0)\n    \n    if non_zeroes == 0:\n        return float('inf')  # or handle as needed if there are no non-zeroes\n    return zeroes / non_zeroes",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the ratio of zeroes to non-zeroes in an array of integers.\n\n### Signature\ndef zero_count(nums):\n\n### Test\nassert math.isclose(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]), 0.181818, rel_tol=0.001)",
    "timestamp": "2025-10-17T16:18:16.666734",
    "response_time": "2.32",
    "context": "{\"function_name\": \"zero_count\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 138,
    "solution": "def is_Sum_Of_Powers_Of_Two(n):\n    if n <= 0:\n        return False\n    powers = []\n    power = 1\n    while power <= n:\n        powers.append(power)\n        power *= 2\n    \n    def can_sum(target, index):\n        if target == 0:\n            return True\n        if target < 0 or index >= len(powers):\n            return False\n        return can_sum(target - powers[index], index + 1) or can_sum(target, index + 1)\n    \n    return can_sum(n, 0)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n\n### Signature\ndef is_Sum_Of_Powers_Of_Two(n):\n\n### Test\nassert candidate(10) == True",
    "timestamp": "2025-10-17T16:18:19.390772",
    "response_time": "2.72",
    "context": "{\"function_name\": \"is_Sum_Of_Powers_Of_Two\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 139,
    "solution": "import math\n\ndef circle_circumference(r):\n    return 2 * math.pi * r",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the circumference of a circle.\n\n### Signature\ndef circle_circumference(r):\n\n### Test\nassert math.isclose(candidate(10), 62.830000000000005, rel_tol=0.001)",
    "timestamp": "2025-10-17T16:18:20.593493",
    "response_time": "1.20",
    "context": "{\"function_name\": \"circle_circumference\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 140,
    "solution": "def extract_singly(test_list):\n    return set(item for sublist in test_list for item in sublist)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to flatten the list of lists into a single set of numbers.\n\n### Signature\ndef extract_singly(test_list):\n\n### Test\nassert set(candidate([(3, 4, 5), (4, 5, 7), (1, 4)])) == set([3, 4, 5, 7, 1])",
    "timestamp": "2025-10-17T16:18:21.837530",
    "response_time": "1.24",
    "context": "{\"function_name\": \"extract_singly\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 141,
    "solution": "def pancake_sort(nums):\n    def flip(sublist, k):\n        return sublist[:k][::-1] + sublist[k:]\n\n    def find_max_index(sublist, n):\n        max_index = 0\n        for i in range(1, n):\n            if sublist[i] > sublist[max_index]:\n                max_index = i\n        return max_index\n\n    n = len(nums)\n    for size in range(n, 1, -1):\n        max_index = find_max_index(nums, size)\n        if max_index != size - 1:\n            if max_index != 0:\n                nums = flip(nums, max_index + 1)\n            nums = flip(nums, size)\n    return nums",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to sort a list of elements.\n\n### Signature\ndef pancake_sort(nums):\n\n### Test\nassert candidate([15, 79, 25, 38, 69]) == [15, 25, 38, 69, 79]",
    "timestamp": "2025-10-17T16:18:25.325092",
    "response_time": "3.49",
    "context": "{\"function_name\": \"pancake_sort\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 142,
    "solution": "def count_samepair(list1, list2, list3):\n    count = 0\n    for a, b, c in zip(list1, list2, list3):\n        if a == b == c:\n            count += 1\n    return count",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to count number items that are identical in the same position of three given lists.\n\n### Signature\ndef count_samepair(list1,list2,list3):\n\n### Test\nassert candidate([1,2,3,4,5,6,7,8],[2,2,3,1,2,6,7,9],[2,1,3,1,2,6,7,9])==3",
    "timestamp": "2025-10-17T16:18:27.155086",
    "response_time": "1.83",
    "context": "{\"function_name\": \"count_samepair\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 143,
    "solution": "def find_lists(Input):\n    return sum(1 for item in Input if isinstance(item, list))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find number of lists present in the given tuple.\n\n### Signature\ndef find_lists(Input):\n\n### Test\nassert candidate(([1, 2, 3, 4], [5, 6, 7, 8])) == 2",
    "timestamp": "2025-10-17T16:18:28.502669",
    "response_time": "1.35",
    "context": "{\"function_name\": \"find_lists\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 145,
    "solution": "def max_Abs_Diff(arr):\n    return max(arr) - min(arr)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the maximum difference between any two elements in a given array.\n\n### Signature\ndef max_Abs_Diff(arr):\n\n### Test\nassert candidate((2,1,5,3)) == 4",
    "timestamp": "2025-10-17T16:18:29.756798",
    "response_time": "1.25",
    "context": "{\"function_name\": \"max_Abs_Diff\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 160,
    "solution": "def find_solution(a, b, n):\n    for x in range(n // a + 1):\n        if (n - a * x) % b == 0:\n            y = (n - a * x) // b\n            return (x, y)\n    return None",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n\n### Signature\ndef find_solution(a, b, n):\n\n### Test\nassert candidate(2, 3, 7) == (2, 1)",
    "timestamp": "2025-10-17T16:18:32.032350",
    "response_time": "2.27",
    "context": "{\"function_name\": \"find_solution\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 161,
    "solution": "def remove_elements(list1, list2):\n    return [item for item in list1 if item not in list2]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to remove all elements from a given list present in another list.\n\n### Signature\ndef remove_elements(list1, list2):\n\n### Test\nassert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2, 4, 6, 8]) == [1, 3, 5, 7, 9, 10]",
    "timestamp": "2025-10-17T16:18:33.076770",
    "response_time": "1.04",
    "context": "{\"function_name\": \"remove_elements\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 162,
    "solution": "def sum_series(n):\n    total = 0\n    for i in range(n // 2 + 1):\n        total += n - 2 * i\n    return total",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n\n### Signature\ndef sum_series(n):\n\n### Test\nassert candidate(6) == 12",
    "timestamp": "2025-10-17T16:18:34.525107",
    "response_time": "1.45",
    "context": "{\"function_name\": \"sum_series\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 163,
    "solution": "import math\n\ndef area_polygon(s, l):\n    return (s * l ** 2) / (4 * math.tan(math.pi / s))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to calculate the area of a regular polygon given the length and number of its sides.\n\n### Signature\ndef area_polygon(s, l):\n\n### Test\nassert math.isclose(candidate(4, 20), 400., rel_tol=0.001)",
    "timestamp": "2025-10-17T16:18:35.949729",
    "response_time": "1.42",
    "context": "{\"function_name\": \"area_polygon\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 164,
    "solution": "def are_equivalent(n1, n2):\n    def sum_of_divisors(n):\n        total = 0\n        for i in range(1, n + 1):\n            if n % i == 0:\n                total += i\n        return total\n\n    return sum_of_divisors(n1) == sum_of_divisors(n2)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to determine if the sum of the divisors of two integers are the same.\n\n### Signature\ndef div_sum(n):\n\n### Test\nassert candidate(36, 57) == False",
    "timestamp": "2025-10-17T16:18:38.278738",
    "response_time": "2.33",
    "context": "{\"function_name\": \"are_equivalent\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 165,
    "solution": "def count_char_position(str1):\n    count = 0\n    for index, char in enumerate(str1.lower()):\n        if char.isalpha() and ord(char) - ord('a') == index:\n            count += 1\n    return count",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\n\n### Signature\ndef count_char_position(str1):\n\n### Test\nassert candidate(\"xbcefg\") == 2",
    "timestamp": "2025-10-17T16:18:40.043546",
    "response_time": "1.76",
    "context": "{\"function_name\": \"count_char_position\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 166,
    "solution": "def find_even_pair(A):\n    count = 0\n    n = len(A)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if (A[i] ^ A[j]) % 2 == 0:\n                count += 1\n    return count",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\n### Signature\ndef find_even_pair(A):\n\n### Test\nassert candidate([5, 4, 7, 2, 1]) == 4",
    "timestamp": "2025-10-17T16:18:42.269973",
    "response_time": "2.23",
    "context": "{\"function_name\": \"find_even_pair\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 167,
    "solution": "def next_power_of_2(n):\n    if n <= 0:\n        return 1\n    power = 1\n    while power < n:\n        power *= 2\n    return power",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the smallest power of 2 greater than or equal to n.\n\n### Signature\ndef next_power_of_2(n):\n\n### Test\nassert candidate(0) == 1",
    "timestamp": "2025-10-17T16:18:43.650616",
    "response_time": "1.38",
    "context": "{\"function_name\": \"next_power_of_2\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 168,
    "solution": "def frequency(a, x):\n    return a.count(x)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to count the number of occurrences of a number in a given list.\n\n### Signature\ndef frequency(a,x):\n\n### Test\nassert candidate([1,2,3], 4) == 0",
    "timestamp": "2025-10-17T16:18:44.536269",
    "response_time": "0.88",
    "context": "{\"function_name\": \"frequency\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 170,
    "solution": "def sum_range_list(list1, m, n):\n    return sum(list1[m:n+1])",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the sum of numbers in a list within a range specified by two indices.\n\n### Signature\ndef sum_range_list(list1, m, n):\n\n### Test\nassert candidate([2,1,5,6,8,3,4,9,10,11,8,12], 8, 10) == 29",
    "timestamp": "2025-10-17T16:18:45.543306",
    "response_time": "1.01",
    "context": "{\"function_name\": \"sum_range_list\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 171,
    "solution": "def perimeter_pentagon(a):\n    return 5 * a",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the perimeter of a regular pentagon from the length of its sides.\n\n### Signature\ndef perimeter_pentagon(a):\n\n### Test\nassert candidate(5) == 25",
    "timestamp": "2025-10-17T16:18:46.417790",
    "response_time": "0.87",
    "context": "{\"function_name\": \"perimeter_pentagon\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 172,
    "solution": "def count_occurance(s):\n    return s.count('std')",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to count the number of occurence of the string 'std' in a given string.\n\n### Signature\ndef count_occurance(s):\n\n### Test\nassert candidate(\"letstdlenstdporstd\") == 3\nassert candidate(\"truststdsolensporsd\") == 1",
    "timestamp": "2025-10-17T16:18:47.447094",
    "response_time": "1.03",
    "context": "{\"function_name\": \"count_occurance\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 222,
    "solution": "def check_type(test_tuple):\n    return all(isinstance(i, type(test_tuple[0])) for i in test_tuple)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to check if all the elements in tuple have same data type or not.\n\n### Signature\ndef check_type(test_tuple):\n\n### Test\nassert candidate((5, 6, 7, 3, 5, 6) ) == True",
    "timestamp": "2025-10-17T16:18:48.376538",
    "response_time": "0.93",
    "context": "{\"function_name\": \"check_type\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 223,
    "solution": "def binary_search(arr, n, x):\n    count = 0\n    for num in arr:\n        if num == x:\n            count += 1\n    return count > n // 2",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)\n\n### Signature\ndef is_majority(arr, n, x):\n\n### Test\nassert is_majority([1, 2, 3, 3, 3, 3, 10], 7, 3) == True\nassert is_majority([1, 1, 2, 4, 4, 4, 6, 6], 8, 4) == False",
    "timestamp": "2025-10-17T16:18:49.796546",
    "response_time": "1.42",
    "context": "{\"function_name\": \"binary_search\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 224,
    "solution": "def count_Set_Bits(n):\n    count = 0\n    while n:\n        count += n & 1\n        n >>= 1\n    return count",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to count the number of set bits (binary digits with value 1) in a given number.\n\n### Signature\ndef count_Set_Bits(n):\n\n### Test\nassert candidate(2) == 1",
    "timestamp": "2025-10-17T16:18:51.251167",
    "response_time": "1.45",
    "context": "{\"function_name\": \"count_Set_Bits\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 226,
    "solution": "def odd_values_string(str):\n    return ''.join(str[i] for i in range(len(str)) if i % 2 == 0)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to remove the characters which have odd index values of a given string.\n\n### Signature\ndef odd_values_string(str):\n\n### Test\nassert candidate('abcdef') == 'ace'\nassert candidate('python') == 'pto'",
    "timestamp": "2025-10-17T16:18:52.584811",
    "response_time": "1.33",
    "context": "{\"function_name\": \"odd_values_string\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 227,
    "solution": "def min_of_three(a, b, c):\n    return min(a, b, c)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find minimum of three numbers.\n\n### Signature\ndef min_of_three(a,b,c):\n\n### Test\nassert candidate(10,20,0)==0",
    "timestamp": "2025-10-17T16:18:53.872748",
    "response_time": "1.29",
    "context": "{\"function_name\": \"min_of_three\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 228,
    "solution": "def all_Bits_Set_In_The_Given_Range(n, l, r):\n    mask = (1 << (r - l + 1)) - 1  # Create a mask for the range\n    masked_bits = (n >> (l - 1)) & mask  # Shift and mask the bits in the range\n    return masked_bits == 0  # Check if all bits in the range are unset",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to check whether all the bits are unset in the given range or not.\n\n### Signature\ndef all_Bits_Set_In_The_Given_Range(n,l,r):\n\n### Test\nassert candidate(4,1,2) == True",
    "timestamp": "2025-10-17T16:18:56.372408",
    "response_time": "2.50",
    "context": "{\"function_name\": \"all_Bits_Set_In_The_Given_Range\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 229,
    "solution": "def re_arrange_array(arr, n):\n    negatives = [x for x in arr[:n] if x < 0]\n    positives = [x for x in arr[:n] if x >= 0]\n    return negatives + positives + arr[n:]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.\n\n### Signature\ndef re_arrange_array(arr, n):\n\n### Test\nassert candidate([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9) == [-1, -3, -7, 4, 5, 6, 2, 8, 9]",
    "timestamp": "2025-10-17T16:18:58.238820",
    "response_time": "1.87",
    "context": "{\"function_name\": \"re_arrange_array\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 230,
    "solution": "def replace_blank(str1, char):\n    return str1.replace(\" \", char)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n\n### Signature\ndef replace_blank(str1,char):\n\n### Test\nassert candidate(\"hello people\",\"\"\"@\"\"\")==(\"hello@people\")",
    "timestamp": "2025-10-17T16:18:59.168542",
    "response_time": "0.93",
    "context": "{\"function_name\": \"replace_blank\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 232,
    "solution": "def larg_nnum(list1, n):\n    return sorted(list1, reverse=True)[:n]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in a list and an integer n and returns a list containing the n largest items from the list.\n\n### Signature\ndef larg_nnum(list1,n):\n\n### Test\nassert set(candidate([10, 20, 50, 70, 90, 20, 50, 40, 60, 80, 100],2))==set([100,90])",
    "timestamp": "2025-10-17T16:19:00.395241",
    "response_time": "1.23",
    "context": "{\"function_name\": \"larg_nnum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 233,
    "solution": "import math\n\ndef lateralsuface_cylinder(r, h):\n    return 2 * math.pi * r * h",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the lateral surface area of a cylinder.\n\n### Signature\ndef lateralsuface_cylinder(r,h):\n\n### Test\nassert math.isclose(candidate(10,5), 314.15000000000003, rel_tol=0.001)",
    "timestamp": "2025-10-17T16:19:01.879665",
    "response_time": "1.48",
    "context": "{\"function_name\": \"lateralsuface_cylinder\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 234,
    "solution": "def volume_cube(l):\n    return l ** 3",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the volume of a cube given its side length.\n\n### Signature\ndef volume_cube(l):\n\n### Test\nassert candidate(3)==27",
    "timestamp": "2025-10-17T16:19:02.754458",
    "response_time": "0.87",
    "context": "{\"function_name\": \"volume_cube\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 235,
    "solution": "def even_bit_set_number(n):\n    return n | 0xAAAAAAAA",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to set all even bits of a given number.\n\n### Signature\ndef even_bit_set_number(n):\n\n### Test\nassert candidate(10) == 10",
    "timestamp": "2025-10-17T16:19:03.851618",
    "response_time": "1.09",
    "context": "{\"function_name\": \"even_bit_set_number\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 237,
    "solution": "def check_occurences(test_list):\n    from collections import Counter\n    \n    # Count occurrences of each tuple in the list\n    count = Counter(test_list)\n    \n    # Create a dictionary with only the tuples that occur more than once\n    result = {key: value for key, value in count.items() if value > 1}\n    \n    return result",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list.\n\n### Signature\ndef check_occurences(test_list):\n\n### Test\nassert candidate([(3, 1), (1, 3), (2, 5), (5, 2), (6, 3)] ) == {(1, 3): 2, (2, 5): 2, (3, 6): 1}",
    "timestamp": "2025-10-17T16:19:06.345174",
    "response_time": "2.49",
    "context": "{\"function_name\": \"check_occurences\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 238,
    "solution": "def number_of_substrings(s):\n    n = len(s)\n    return n * (n + 1) // 2",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to count the number of non-empty substrings of a given string.\n\n### Signature\ndef number_of_substrings(str):\n\n### Test\nassert candidate(\"abc\") == 6",
    "timestamp": "2025-10-17T16:19:07.250427",
    "response_time": "0.90",
    "context": "{\"function_name\": \"number_of_substrings\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 239,
    "solution": "def get_total_number_of_sequences(m, n):\n    if n == 0:\n        return 1\n    if m < 1:\n        return 0\n\n    count = 0\n    for i in range(1, m + 1):\n        count += get_total_number_of_sequences(m, n - 1) if i * 2 <= m else 0\n\n    return count",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.\n\n### Signature\ndef get_total_number_of_sequences(m,n):\n\n### Test\nassert candidate(10, 4) == 4",
    "timestamp": "2025-10-17T16:19:09.507933",
    "response_time": "2.25",
    "context": "{\"function_name\": \"get_total_number_of_sequences\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 240,
    "solution": "def replace_list(list1, list2):\n    if list1:\n        list1 = list1[:-1] + list2\n    else:\n        list1 = list2\n    return list1",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in two lists and replaces the last element of the first list with the elements of the second list.\n\n### Signature\ndef replace_list(list1,list2):\n\n### Test\nassert candidate([1, 3, 5, 7, 9, 10],[2, 4, 6, 8])==[1, 3, 5, 7, 9, 2, 4, 6, 8]",
    "timestamp": "2025-10-17T16:19:10.894784",
    "response_time": "1.39",
    "context": "{\"function_name\": \"replace_list\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 242,
    "solution": "def count_charac(str1):\n    return len(str1)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to count the total number of characters in a string.\n\n### Signature\ndef count_charac(str1):\n\n### Test\nassert candidate(\"python programming\")==18",
    "timestamp": "2025-10-17T16:19:11.938934",
    "response_time": "1.04",
    "context": "{\"function_name\": \"count_charac\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 244,
    "solution": "def next_Perfect_Square(N):\n    import math\n    next_square_root = math.ceil(math.sqrt(N))\n    return next_square_root ** 2",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the next perfect square greater than a given number.\n\n### Signature\ndef next_Perfect_Square(N):\n\n### Test\nassert candidate(35) == 36",
    "timestamp": "2025-10-17T16:19:13.188547",
    "response_time": "1.25",
    "context": "{\"function_name\": \"next_Perfect_Square\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 245,
    "solution": "def max_sum(arr):\n    n = len(arr)\n    if n == 0:\n        return 0\n\n    # Create an array to store the maximum sum of increasing subsequence\n    inc = [0] * n\n    for i in range(n):\n        inc[i] = arr[i]\n        for j in range(i):\n            if arr[i] > arr[j]:\n                inc[i] = max(inc[i], inc[j] + arr[i])\n\n    # Create an array to store the maximum sum of decreasing subsequence\n    dec = [0] * n\n    for i in range(n - 1, -1, -1):\n        dec[i] = arr[i]\n        for j in range(i + 1, n):\n            if arr[i] > arr[j]:\n                dec[i] = max(dec[i], dec[j] + arr[i])\n\n    # Calculate the maximum sum of bitonic subsequence\n    max_sum_bitonic = 0\n    for i in range(n):\n        max_sum_bitonic = max(max_sum_bitonic, inc[i] + dec[i] - arr[i])\n\n    return max_sum_bitonic",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\n\n### Signature\ndef max_sum(arr):\n\n### Test\nassert candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]) == 194",
    "timestamp": "2025-10-17T16:19:18.541802",
    "response_time": "5.35",
    "context": "{\"function_name\": \"max_sum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 246,
    "solution": "import math\n\ndef babylonian_squareroot(number):\n    if number < 0:\n        raise ValueError(\"Cannot compute square root of a negative number.\")\n    elif number == 0:\n        return 0\n    else:\n        guess = number / 2.0\n        while True:\n            new_guess = (guess + number / guess) / 2.0\n            if math.isclose(new_guess, guess, rel_tol=1e-10):\n                return new_guess\n            guess = new_guess",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function for computing square roots using the babylonian method.\n\n### Signature\ndef babylonian_squareroot(number):\n\n### Test\nassert math.isclose(candidate(10), 3.162277660168379, rel_tol=0.001)",
    "timestamp": "2025-10-17T16:19:22.330215",
    "response_time": "3.79",
    "context": "{\"function_name\": \"babylonian_squareroot\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 247,
    "solution": "def lps(s: str) -> int:\n    s = s.replace(\" \", \"\").lower()\n    n = len(s)\n    dp = [[0] * n for _ in range(n)]\n    \n    for i in range(n):\n        dp[i][i] = 1\n    \n    for length in range(2, n + 1):\n        for i in range(n - length + 1):\n            j = i + length - 1\n            if s[i] == s[j]:\n                dp[i][j] = dp[i + 1][j - 1] + 2\n            else:\n                dp[i][j] = max(dp[i + 1][j], dp[i][j - 1])\n    \n    return dp[0][n - 1]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the length of the longest palindromic subsequence in the given string.\n\n### Signature\ndef lps(str):\n\n### Test\nassert candidate(\"TENS FOR TENS\") == 5",
    "timestamp": "2025-10-17T16:19:26.470093",
    "response_time": "4.14",
    "context": "{\"function_name\": \"lps\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 248,
    "solution": "import math\n\ndef harmonic_sum(n):\n    if n <= 1:\n        return 0\n    return sum(1 / i for i in range(1, n))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in an integer n and calculates the harmonic sum of n-1.\n\n### Signature\ndef harmonic_sum(n):\n\n### Test\nassert math.isclose(candidate(7), 2.5928571428571425, rel_tol=0.001)",
    "timestamp": "2025-10-17T16:19:27.950718",
    "response_time": "1.48",
    "context": "{\"function_name\": \"harmonic_sum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 249,
    "solution": "def intersection_array(array_nums1, array_nums2):\n    return list(set(array_nums1) & set(array_nums2))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the intersection of two arrays.\n\n### Signature\ndef intersection_array(array_nums1,array_nums2):\n\n### Test\nassert candidate([1, 2, 3, 5, 7, 8, 9, 10],[1, 2, 4, 8, 9])==[1, 2, 8, 9]",
    "timestamp": "2025-10-17T16:19:29.502348",
    "response_time": "1.55",
    "context": "{\"function_name\": \"intersection_array\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 250,
    "solution": "def count_X(tup, x):\n    return tup.count(x)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.\n\n### Signature\ndef count_X(tup, x):\n\n### Test\nassert candidate((10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2),4) == 0",
    "timestamp": "2025-10-17T16:19:30.790030",
    "response_time": "1.29",
    "context": "{\"function_name\": \"count_X\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 251,
    "solution": "def insert_element(lst, element):\n    result = []\n    for item in lst:\n        result.append(element)\n        result.append(item)\n    return result",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.\n\n### Signature\ndef insert_element(list,element):\n\n### Test\nassert candidate(['Red', 'Green', 'Black'] ,'c')==['c', 'Red', 'c', 'Green', 'c', 'Black']",
    "timestamp": "2025-10-17T16:19:32.454484",
    "response_time": "1.66",
    "context": "{\"function_name\": \"insert_element\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 252,
    "solution": "import cmath\n\ndef convert(numbers):\n    if isinstance(numbers, complex):\n        return cmath.polar(numbers)\n    else:\n        return (float(numbers), 0.0)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to convert complex numbers to polar coordinates.\n\n### Signature\ndef convert(numbers):\n\n### Test\nassert candidate(1) == (1.0, 0.0)",
    "timestamp": "2025-10-17T16:19:34.566681",
    "response_time": "2.11",
    "context": "{\"function_name\": \"convert\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 253,
    "solution": "def count_integer(list1):\n    return sum(1 for item in list1 if isinstance(item, int))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function that returns the number of integer elements in a given list.\n\n### Signature\ndef count_integer(list1):\n\n### Test\nassert candidate([1,2,'abc',1.2]) == 2",
    "timestamp": "2025-10-17T16:19:35.914046",
    "response_time": "1.35",
    "context": "{\"function_name\": \"count_integer\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 255,
    "solution": "from itertools import combinations_with_replacement\n\ndef combinations_colors(l, n):\n    return list(combinations_with_replacement(l, n))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination.\n\n### Signature\ndef combinations_colors(l, n):\n\n### Test\nassert candidate( [\"Red\",\"Green\",\"Blue\"],1)==[(\"\"\"Red\"\"\",), (\"\"\"Green\"\"\",), (\"\"\"Blue\"\"\",)]",
    "timestamp": "2025-10-17T16:19:37.261218",
    "response_time": "1.35",
    "context": "{\"function_name\": \"combinations_colors\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 256,
    "solution": "def count_Primes_nums(n):\n    if n < 2:\n        return 0\n    \n    def is_prime(num):\n        if num < 2:\n            return False\n        for i in range(2, int(num**0.5) + 1):\n            if num % i == 0:\n                return False\n        return True\n    \n    count = 0\n    for i in range(2, n):\n        if is_prime(i):\n            count += 1\n            \n    return count",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.\n\n### Signature\ndef count_Primes_nums(n):\n\n### Test\nassert candidate(5) == 2",
    "timestamp": "2025-10-17T16:19:40.753347",
    "response_time": "3.49",
    "context": "{\"function_name\": \"count_Primes_nums\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 257,
    "solution": "def swap_numbers(a, b):\n    return (b, a)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\n### Signature\ndef swap_numbers(a,b):\n\n### Test\nassert candidate(10,20)==(20,10)",
    "timestamp": "2025-10-17T16:19:42.173151",
    "response_time": "1.42",
    "context": "{\"function_name\": \"swap_numbers\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 259,
    "solution": "def maximize_elements(test_tup1, test_tup2):\n    return tuple((max(a, b) for a, b in zip(t1, t2)) for t1, t2 in zip(test_tup1, test_tup2))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to maximize the given two tuples.\n\n### Signature\ndef maximize_elements(test_tup1, test_tup2):\n\n### Test\nassert candidate(((1, 3), (4, 5), (2, 9), (1, 10)), ((6, 7), (3, 9), (1, 1), (7, 3))) == ((6, 7), (4, 9), (2, 9), (7, 10))",
    "timestamp": "2025-10-17T16:19:43.918432",
    "response_time": "1.74",
    "context": "{\"function_name\": \"maximize_elements\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 260,
    "solution": "def newman_prime(n):\n    if n < 1:\n        return None\n    \n    primes = []\n    candidate = 2\n    while len(primes) < n:\n        is_prime = True\n        for p in primes:\n            if p * p > candidate:\n                break\n            if candidate % p == 0:\n                is_prime = False\n                break\n        if is_prime:\n            primes.append(candidate)\n            if len(primes) >= 3:\n                newman_shanks_williams = primes[-1] + 2 * primes[-2] + 3 * primes[-3]\n                if len(primes) == n:\n                    return newman_shanks_williams\n        candidate += 1",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the nth newman\u2013shanks\u2013williams prime number.\n\n### Signature\ndef newman_prime(n):\n\n### Test\nassert candidate(3) == 7",
    "timestamp": "2025-10-17T16:19:47.861687",
    "response_time": "3.94",
    "context": "{\"function_name\": \"newman_prime\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 261,
    "solution": "def division_elements(test_tup1, test_tup2):\n    return tuple(a // b for a, b in zip(test_tup1, test_tup2))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n\n### Signature\ndef division_elements(test_tup1, test_tup2):\n\n### Test\nassert candidate((10, 4, 6, 9),(5, 2, 3, 3)) == (2, 2, 2, 3)",
    "timestamp": "2025-10-17T16:19:50.608173",
    "response_time": "2.74",
    "context": "{\"function_name\": \"division_elements\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 262,
    "solution": "def split_two_parts(list1, L):\n    return list1[:L], list1[L:]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n\n### Signature\ndef split_two_parts(list1, L):\n\n### Test\nassert candidate([1,1,2,3,4,4,5,1],3)==([1, 1, 2], [3, 4, 4, 5, 1])",
    "timestamp": "2025-10-17T16:19:51.685016",
    "response_time": "1.08",
    "context": "{\"function_name\": \"split_two_parts\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 264,
    "solution": "def dog_age(h_age):\n    if h_age < 0:\n        return \"Invalid age\"\n    elif h_age == 1:\n        return 15\n    elif h_age == 2:\n        return 24\n    else:\n        return 24 + (h_age - 2) * 5",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to calculate a dog's age in dog's years.\n\n### Signature\ndef dog_age(h_age):\n\n### Test\nassert candidate(12)==61",
    "timestamp": "2025-10-17T16:19:54.206360",
    "response_time": "2.52",
    "context": "{\"function_name\": \"dog_age\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 265,
    "solution": "def list_split(S, step):\n    return [S[i::step] for i in range(step)]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\n\n### Signature\ndef list_split(S, step):\n\n### Test\nassert candidate(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n'],3)==[['a', 'd', 'g', 'j', 'm'], ['b', 'e', 'h', 'k', 'n'], ['c', 'f', 'i', 'l']]",
    "timestamp": "2025-10-17T16:19:55.528123",
    "response_time": "1.32",
    "context": "{\"function_name\": \"list_split\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 266,
    "solution": "def lateralsurface_cube(l):\n    return 4 * (l ** 2)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the lateral surface area of a cube given its side length.\n\n### Signature\ndef lateralsurface_cube(l):\n\n### Test\nassert candidate(5)==100",
    "timestamp": "2025-10-17T16:19:56.800036",
    "response_time": "1.27",
    "context": "{\"function_name\": \"lateralsurface_cube\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 267,
    "solution": "def square_Sum(n):\n    return sum((2 * i + 1) ** 2 for i in range(n))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\n\n### Signature\ndef square_Sum(n):\n\n### Test\nassert candidate(2) == 10",
    "timestamp": "2025-10-17T16:19:58.121905",
    "response_time": "1.32",
    "context": "{\"function_name\": \"square_Sum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 268,
    "solution": "def find_star_num(n):\n    return n * (6 * n - 6) // 2 + 1",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the n'th star number.\n\n### Signature\ndef find_star_num(n):\n\n### Test\nassert candidate(3) == 37",
    "timestamp": "2025-10-17T16:19:59.428166",
    "response_time": "1.30",
    "context": "{\"function_name\": \"find_star_num\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 269,
    "solution": "def ascii_value(k):\n    return ord(k)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the ascii value of a character.\n\n### Signature\ndef ascii_value(k):\n\n### Test\nassert candidate('A')==65",
    "timestamp": "2025-10-17T16:20:00.305722",
    "response_time": "0.88",
    "context": "{\"function_name\": \"ascii_value\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 270,
    "solution": "def sum_even_and_even_index(arr):\n    return sum(arr[i] for i in range(0, len(arr), 2) if arr[i] % 2 == 0)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the sum of even numbers at even positions of a list.\n\n### Signature\ndef sum_even_and_even_index(arr):\n\n### Test\nassert candidate([5, 6, 12, 1, 18, 8]) == 30",
    "timestamp": "2025-10-17T16:20:02.727961",
    "response_time": "2.42",
    "context": "{\"function_name\": \"sum_even_and_even_index\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 271,
    "solution": "def even_Power_Sum(n):\n    return sum((2 * i) ** 5 for i in range(1, n + 1))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\n\n### Signature\ndef even_Power_Sum(n):\n\n### Test\nassert candidate(2) == 1056",
    "timestamp": "2025-10-17T16:20:03.982404",
    "response_time": "1.25",
    "context": "{\"function_name\": \"even_Power_Sum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 272,
    "solution": "def rear_extract(test_list):\n    return [t[-1] for t in test_list]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in a list of tuples and returns a list containing the rear element of each tuple.\n\n### Signature\ndef rear_extract(test_list):\n\n### Test\nassert candidate([(1, 'Rash', 21), (2, 'Varsha', 20), (3, 'Kil', 19)]) == [21, 20, 19]",
    "timestamp": "2025-10-17T16:20:04.887332",
    "response_time": "0.90",
    "context": "{\"function_name\": \"rear_extract\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 273,
    "solution": "def substract_elements(test_tup1, test_tup2):\n    return tuple(a - b for a, b in zip(test_tup1, test_tup2))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index.\n\n### Signature\ndef substract_elements(test_tup1, test_tup2):\n\n### Test\nassert candidate((10, 4, 5), (2, 5, 18)) == (8, -1, -13)",
    "timestamp": "2025-10-17T16:20:06.248568",
    "response_time": "1.36",
    "context": "{\"function_name\": \"substract_elements\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 274,
    "solution": "def even_binomial_Coeff_Sum(n):\n    from math import comb\n    \n    total = 0\n    for k in range(0, n + 1, 2):\n        total += comb(n, k)\n    \n    return total",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.\n\n### Signature\ndef even_binomial_Coeff_Sum( n):\n\n### Test\nassert candidate(4) == 8",
    "timestamp": "2025-10-17T16:20:08.291945",
    "response_time": "2.04",
    "context": "{\"function_name\": \"even_binomial_Coeff_Sum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 276,
    "solution": "import math\n\ndef volume_cylinder(r, h):\n    return math.pi * (r ** 2) * h",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in the radius and height of a cylinder and returns the the volume.\n\n### Signature\ndef volume_cylinder(r,h):\n\n### Test\nassert math.isclose(candidate(10,5), 1570.7500000000002, rel_tol=0.001)",
    "timestamp": "2025-10-17T16:20:10.163905",
    "response_time": "1.87",
    "context": "{\"function_name\": \"volume_cylinder\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 277,
    "solution": "def dict_filter(dict, n):\n    return {key: value for key, value in dict.items() if value >= n}",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\n\n### Signature\ndef dict_filter(dict,n):\n\n### Test\nassert candidate({'Cierra Vega': 175, 'Alden Cantrell': 180, 'Kierra Gentry': 165, 'Pierre Cox': 190},170)=={'Cierra Vega': 175, 'Alden Cantrell': 180, 'Pierre Cox': 190}",
    "timestamp": "2025-10-17T16:20:11.377933",
    "response_time": "1.21",
    "context": "{\"function_name\": \"dict_filter\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 278,
    "solution": "def count_first_elements(test_tup):\n    if not isinstance(test_tup, tuple):\n        return 0\n    count = 0\n    for element in test_tup:\n        if isinstance(element, tuple):\n            break\n        count += 1\n    return count",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the number of elements that occurs before the tuple element in the given tuple.\n\n### Signature\ndef count_first_elements(test_tup):\n\n### Test\nassert candidate((1, 5, 7, (4, 6), 10) ) == 3",
    "timestamp": "2025-10-17T16:20:13.685186",
    "response_time": "2.30",
    "context": "{\"function_name\": \"count_first_elements\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 279,
    "solution": "def is_num_decagonal(n):\n    return n * (4 * n - 2)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the nth decagonal number.\n\n### Signature\ndef is_num_decagonal(n):\n\n### Test\nassert candidate(3) == 27",
    "timestamp": "2025-10-17T16:20:14.792924",
    "response_time": "1.11",
    "context": "{\"function_name\": \"is_num_decagonal\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 280,
    "solution": "def sequential_search(dlist, item):\n    for index, value in enumerate(dlist):\n        if value == item:\n            return (True, index)\n    return (False, -1)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in an array and element and returns a tuple containing a boolean that indicates if the element is in the array and the index position of the element (or -1 if the element is not found).\n\n### Signature\ndef sequential_search(dlist, item):\n\n### Test\nassert candidate([11,23,58,31,56,77,43,12,65,19],31) == (True, 3)",
    "timestamp": "2025-10-17T16:20:17.077287",
    "response_time": "2.28",
    "context": "{\"function_name\": \"sequential_search\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 281,
    "solution": "def all_unique(test_list):\n    return len(test_list) == len(set(test_list))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to check if the elements of a given list are unique or not.\n\n### Signature\ndef all_unique(test_list):\n\n### Test\nassert candidate([1,2,3]) == True",
    "timestamp": "2025-10-17T16:20:18.506170",
    "response_time": "1.43",
    "context": "{\"function_name\": \"all_unique\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 282,
    "solution": "def sub_list(nums1, nums2):\n    return [a - b for a, b in zip(nums1, nums2)]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to subtract two lists element-wise.\n\n### Signature\ndef sub_list(nums1,nums2):\n\n### Test\nassert candidate([1, 2, 3],[4,5,6])==[-3,-3,-3]",
    "timestamp": "2025-10-17T16:20:19.653592",
    "response_time": "1.15",
    "context": "{\"function_name\": \"sub_list\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 283,
    "solution": "def validate(n):\n    digit_count = [0] * 10\n    \n    for digit in str(n):\n        digit_count[int(digit)] += 1\n    \n    for i in range(10):\n        if digit_count[i] > i:\n            return False\n            \n    return True",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n\n### Signature\ndef validate(n):\n\n### Test\nassert candidate(1234) == True",
    "timestamp": "2025-10-17T16:20:21.801848",
    "response_time": "2.15",
    "context": "{\"function_name\": \"validate\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 284,
    "solution": "def check_element(lst, element):\n    return all(item == element for item in lst)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that takes in a list and element and checks whether all items in the list are equal to the given element.\n\n### Signature\ndef check_element(list,element):\n\n### Test\nassert candidate([\"green\", \"orange\", \"black\", \"white\"],\"\"\"blue\"\"\")==False",
    "timestamp": "2025-10-17T16:20:23.090751",
    "response_time": "1.29",
    "context": "{\"function_name\": \"check_element\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 285,
    "solution": "def text_match_two_three(text):\n    return bool(re.search(r'a(b{2,3})', text))\n\nimport re",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\n\n### Signature\ndef text_match_two_three(text):\n\n### Test\nassert candidate(\"ac\")==(False)",
    "timestamp": "2025-10-17T16:20:24.262707",
    "response_time": "1.17",
    "context": "{\"function_name\": \"text_match_two_three\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 286,
    "solution": "def max_sub_array_sum_repeated(a, n, k):\n    if k == 0:\n        return 0\n    \n    # Calculate the maximum subarray sum using Kadane's algorithm\n    def kadane(arr):\n        max_ending_here = max_so_far = arr[0]\n        for x in arr[1:]:\n            max_ending_here = max(x, max_ending_here + x)\n            max_so_far = max(max_so_far, max_ending_here)\n        return max_so_far\n    \n    # Calculate the total sum of the original array\n    total_sum = sum(a)\n    \n    # Maximum subarray sum for the original array\n    max_kadane = kadane(a)\n    \n    if k == 1:\n        return max_kadane\n    \n    # Maximum subarray sum for the first and last part of the array\n    max_prefix_sum = float('-inf')\n    current_prefix_sum = 0\n    for i in range(n):\n        current_prefix_sum += a[i]\n        max_prefix_sum = max(max_prefix_sum, current_prefix_sum)\n    \n    max_suffix_sum = float('-inf')\n    current_suffix_sum = 0\n    for i in range(n-1, -1, -1):\n        current_suffix_sum += a[i]\n        max_suffix_sum = max(max_suffix_sum, current_suffix_sum)\n    \n    if total_sum > 0:\n        return max(max_kadane, max_prefix_sum + max_suffix_sum + (k - 2) * total_sum)\n    else:\n        return max(max_kadane, max_prefix_sum + max_suffix_sum)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the largest sum of a contiguous array in the modified array which is formed by repeating the given array k times.\n\n### Signature\ndef max_sub_array_sum_repeated(a, n, k):\n\n### Test\nassert candidate([10, 20, -30, -1], 4, 3) == 30",
    "timestamp": "2025-10-17T16:20:32.090435",
    "response_time": "7.83",
    "context": "{\"function_name\": \"max_sub_array_sum_repeated\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 287,
    "solution": "def square_Sum(n):\n    return sum((2 * i) ** 2 for i in range(1, n + 1))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\n\n### Signature\ndef square_Sum(n):\n\n### Test\nassert candidate(2) == 20",
    "timestamp": "2025-10-17T16:20:33.770639",
    "response_time": "1.68",
    "context": "{\"function_name\": \"square_Sum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 290,
    "solution": "def max_length(list1):\n    max_len = 0\n    max_list = []\n    \n    for sublist in list1:\n        if len(sublist) > max_len:\n            max_len = len(sublist)\n            max_list = sublist\n            \n    return (max_len, max_list)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the list of maximum length in a list of lists.\n\n### Signature\ndef max_length(list1):\n\n### Test\nassert candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3, [13, 15, 17])",
    "timestamp": "2025-10-17T16:20:36.216706",
    "response_time": "2.44",
    "context": "{\"function_name\": \"max_length\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 291,
    "solution": "def count_no_of_ways(n, k):\n    if n == 0:\n        return 0\n    if n == 1:\n        return k\n    if n == 2:\n        return k * k\n\n    # dp[i] will store the number of ways to paint the fence with i posts\n    dp = [0] * (n + 1)\n    dp[1] = k\n    dp[2] = k * k\n\n    for i in range(3, n + 1):\n        dp[i] = (k - 1) * (dp[i - 1] + dp[i - 2])\n\n    return dp[n]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n\n### Signature\ndef count_no_of_ways(n, k):\n\n### Test\nassert candidate(2, 4) == 16",
    "timestamp": "2025-10-17T16:20:39.779819",
    "response_time": "3.56",
    "context": "{\"function_name\": \"count_no_of_ways\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 292,
    "solution": "def find(n, m):\n    return n // m",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find quotient of two numbers (rounded down to the nearest integer).\n\n### Signature\ndef find(n,m):\n\n### Test\nassert candidate(10,3) == 3",
    "timestamp": "2025-10-17T16:20:40.782412",
    "response_time": "1.00",
    "context": "{\"function_name\": \"find\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 293,
    "solution": "import math\n\ndef otherside_rightangle(w, h):\n    return math.sqrt(w**2 + h**2)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the third side of a right angled triangle.\n\n### Signature\ndef otherside_rightangle(w,h):\n\n### Test\nassert candidate(7,8)==10.63014581273465",
    "timestamp": "2025-10-17T16:20:42.070978",
    "response_time": "1.29",
    "context": "{\"function_name\": \"otherside_rightangle\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 294,
    "solution": "def max_val(listval):\n    max_value = None\n    for item in listval:\n        if isinstance(item, (int, float)):\n            if max_value is None or item > max_value:\n                max_value = item\n    return max_value",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the maximum value in a given heterogeneous list.\n\n### Signature\ndef max_val(listval):\n\n### Test\nassert candidate(['Python', 3, 2, 4, 5, 'version'])==5",
    "timestamp": "2025-10-17T16:20:43.823342",
    "response_time": "1.75",
    "context": "{\"function_name\": \"max_val\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 295,
    "solution": "def sum_div(number):\n    return sum(i for i in range(1, number) if number % i == 0)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to return the sum of all divisors of a number.\n\n### Signature\ndef sum_div(number):\n\n### Test\nassert candidate(8)==7",
    "timestamp": "2025-10-17T16:20:45.401772",
    "response_time": "1.58",
    "context": "{\"function_name\": \"sum_div\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 296,
    "solution": "def get_Inv_Count(arr):\n    def merge_and_count(arr, temp_arr, left, mid, right):\n        i = left    # Starting index for left subarray\n        j = mid + 1 # Starting index for right subarray\n        k = left    # Starting index to be sorted\n        inv_count = 0\n  \n        while i <= mid and j <= right:\n            if arr[i] <= arr[j]:\n                temp_arr[k] = arr[i]\n                i += 1\n            else:\n                temp_arr[k] = arr[j]\n                inv_count += (mid - i + 1)\n                j += 1\n            k += 1\n  \n        while i <= mid:\n            temp_arr[k] = arr[i]\n            i += 1\n            k += 1\n  \n        while j <= right:\n            temp_arr[k] = arr[j]\n            j += 1\n            k += 1\n  \n        for i in range(left, right + 1):\n            arr[i] = temp_arr[i]\n          \n        return inv_count\n  \n    def merge_sort_and_count(arr, temp_arr, left, right):\n        inv_count = 0\n        if left < right:\n            mid = (left + right) // 2\n  \n            inv_count += merge_sort_and_count(arr, temp_arr, left, mid)\n            inv_count += merge_sort_and_count(arr, temp_arr, mid + 1, right)\n            inv_count += merge_and_count(arr, temp_arr, left, mid, right)\n  \n        return inv_count\n  \n    temp_arr = [0] * len(arr)\n    return merge_sort_and_count(arr, temp_arr, 0, len(arr) - 1)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to count inversions in an array.\n\n### Signature\ndef get_Inv_Count(arr):\n\n### Test\nassert candidate([1,20,6,4,5]) == 5",
    "timestamp": "2025-10-17T16:20:57.579700",
    "response_time": "12.18",
    "context": "{\"function_name\": \"get_Inv_Count\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 297,
    "solution": "def flatten_list(list1):\n    result = []\n    for item in list1:\n        if isinstance(item, list):\n            result.extend(flatten_list(item))\n        else:\n            result.append(item)\n    return result",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to flatten a given nested list structure.\n\n### Signature\ndef flatten_list(list1):\n\n### Test\nassert candidate([0, 10, [20, 30], 40, 50, [60, 70, 80], [90, 100, 110, 120]])==[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120]",
    "timestamp": "2025-10-17T16:20:59.256648",
    "response_time": "1.67",
    "context": "{\"function_name\": \"flatten_list\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 299,
    "solution": "def max_aggregate(stdata):\n    aggregate_scores = {}\n    \n    for name, score in stdata:\n        if name in aggregate_scores:\n            aggregate_scores[name] += score\n        else:\n            aggregate_scores[name] = score\n            \n    max_name = max(aggregate_scores, key=aggregate_scores.get)\n    return (max_name, aggregate_scores[max_name])",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to calculate the maximum aggregate from the list of tuples.\n\n### Signature\ndef max_aggregate(stdata):\n\n### Test\nassert candidate([('Juan Whelan',90),('Sabah Colley',88),('Peter Nichols',7),('Juan Whelan',122),('Sabah Colley',84)])==('Juan Whelan', 212)",
    "timestamp": "2025-10-17T16:21:01.808652",
    "response_time": "2.55",
    "context": "{\"function_name\": \"max_aggregate\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 300,
    "solution": "import math\nfrom math import comb\n\ndef count_binary_seq(n):\n    return comb(2 * n, n) / (n + 1)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits.\n\n### Signature\ndef count_binary_seq(n):\n\n### Test\nassert math.isclose(candidate(1), 2.0, rel_tol=0.001)",
    "timestamp": "2025-10-17T16:21:02.977288",
    "response_time": "1.17",
    "context": "{\"function_name\": \"count_binary_seq\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 301,
    "solution": "def dict_depth(d):\n    if isinstance(d, dict) and d:\n        return 1 + max(dict_depth(v) for v in d.values())\n    return 0",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the depth of a dictionary.\n\n### Signature\ndef dict_depth(d):\n\n### Test\nassert candidate({'a':1, 'b': {'c': {'d': {}}}})==4",
    "timestamp": "2025-10-17T16:21:04.312278",
    "response_time": "1.33",
    "context": "{\"function_name\": \"dict_depth\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 304,
    "solution": "def find_Element(arr, ranges, rotations, index):\n    n = len(arr)\n    # Perform the rotations\n    rotations = rotations % n\n    rotated_arr = arr[-rotations:] + arr[:-rotations]\n    \n    # Find the element at the given index for each range\n    result = []\n    for start, end in ranges:\n        if start <= index <= end:\n            result.append(rotated_arr[index])\n    \n    return result[0] if result else None",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find element at a given index after number of rotations.\n\n### Signature\ndef find_Element(arr,ranges,rotations,index) :\n\n### Test\nassert candidate([1,2,3,4,5],[[0,2],[0,3]],2,1) == 3",
    "timestamp": "2025-10-17T16:21:07.137173",
    "response_time": "2.82",
    "context": "{\"function_name\": \"find_Element\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 305,
    "solution": "def start_withp(words):\n    result = []\n    for word in words:\n        for w in word.split():\n            if w.startswith('P') or w.startswith('p'):\n                result.append(w)\n                if len(result) == 2:\n                    return tuple(result)\n    return tuple(result)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to return two words from a list of words starting with letter 'p'.\n\n### Signature\ndef start_withp(words):\n\n### Test\nassert candidate([\"Python PHP\", \"Java JavaScript\", \"c c++\"])==(\"\"\"Python\"\"\", \"\"\"PHP\"\"\")",
    "timestamp": "2025-10-17T16:21:09.899909",
    "response_time": "2.76",
    "context": "{\"function_name\": \"start_withp\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 306,
    "solution": "def max_sum_increasing_subseq(a, n, index, k):\n    if index >= n or k >= n or index < 0 or k < 0:\n        return 0\n\n    # Calculate the maximum sum of increasing subsequence up to the given index\n    max_sum = [0] * (index + 1)\n    for i in range(index + 1):\n        max_sum[i] = a[i]\n        for j in range(i):\n            if a[j] < a[i]:\n                max_sum[i] = max(max_sum[i], max_sum[j] + a[i])\n\n    # Now include the kth element\n    max_sum_with_k = 0\n    for i in range(index + 1):\n        if a[i] < a[k]:\n            max_sum_with_k = max(max_sum_with_k, max_sum[i] + a[k])\n\n    return max_sum_with_k",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n\n### Signature\ndef max_sum_increasing_subseq(a, n, index, k):\n\n### Test\nassert candidate([1, 101, 2, 3, 100, 4, 5 ], 7, 4, 6) == 11",
    "timestamp": "2025-10-17T16:21:15.106654",
    "response_time": "5.20",
    "context": "{\"function_name\": \"max_sum_increasing_subseq\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 307,
    "solution": "def colon_tuplex(tuplex, m, n):\n    if m < 0 or m >= len(tuplex):\n        raise IndexError(\"m is out of bounds\")\n    if n < 0:\n        raise ValueError(\"n must be non-negative\")\n    \n    new_tuplex = list(tuplex)\n    new_tuplex[m] = [n]\n    \n    return tuple(new_tuplex)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to get a colon of a tuple.\n\n### Signature\ndef colon_tuplex(tuplex,m,n):\n\n### Test\nassert candidate((\"HELLO\", 5, [], True) ,2,50)==(\"HELLO\", 5, [50], True)",
    "timestamp": "2025-10-17T16:21:18.071580",
    "response_time": "2.96",
    "context": "{\"function_name\": \"colon_tuplex\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 308,
    "solution": "from itertools import product\n\ndef large_product(nums1, nums2, N):\n    products = sorted((x * y for x, y in product(nums1, nums2)), reverse=True)\n    return products[:N]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n\n### Signature\ndef large_product(nums1, nums2, N):\n\n### Test\nassert candidate([1, 2, 3, 4, 5, 6],[3, 6, 8, 9, 10, 6],3)==[60, 54, 50]",
    "timestamp": "2025-10-17T16:21:20.145267",
    "response_time": "2.07",
    "context": "{\"function_name\": \"large_product\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 309,
    "solution": "def maximum(a, b):\n    return a if a > b else b",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the maximum of two numbers.\n\n### Signature\ndef maximum(a,b):\n\n### Test\nassert candidate(5,10) == 10",
    "timestamp": "2025-10-17T16:21:21.643948",
    "response_time": "1.50",
    "context": "{\"function_name\": \"maximum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 310,
    "solution": "def string_to_tuple(str1):\n    return tuple(char for char in str1)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to convert a given string to a tuple of characters.\n\n### Signature\ndef string_to_tuple(str1):\n\n### Test\nassert candidate(\"python 3.0\")==(\"\"\"p\"\"\", \"\"\"y\"\"\", \"\"\"t\"\"\", \"\"\"h\"\"\", \"\"\"o\"\"\", \"\"\"n\"\"\", \"\"\"3\"\"\", \"\"\".\"\"\", \"\"\"0\"\"\")",
    "timestamp": "2025-10-17T16:21:22.915045",
    "response_time": "1.27",
    "context": "{\"function_name\": \"string_to_tuple\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 311,
    "solution": "def set_left_most_unset_bit(n):\n    # Find the leftmost unset bit\n    bit_position = 0\n    while (1 << bit_position) <= n:\n        bit_position += 1\n    \n    # Set the leftmost unset bit\n    return n | (1 << bit_position)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to set the left most unset bit.\n\n### Signature\ndef set_left_most_unset_bit(n):\n\n### Test\nassert candidate(10) == 14",
    "timestamp": "2025-10-17T16:21:25.985017",
    "response_time": "3.07",
    "context": "{\"function_name\": \"set_left_most_unset_bit\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 312,
    "solution": "import math\n\ndef volume_cone(r, h):\n    return (1/3) * math.pi * (r ** 2) * h",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the volume of a cone.\n\n### Signature\ndef volume_cone(r,h):\n\n### Test\nassert math.isclose(candidate(5,12), 314.15926535897927, rel_tol=0.001)",
    "timestamp": "2025-10-17T16:21:27.788230",
    "response_time": "1.80",
    "context": "{\"function_name\": \"volume_cone\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 388,
    "solution": "def highest_Power_of_2(n):\n    power = 1\n    while power <= n:\n        power *= 2\n    return power // 2",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the highest power of 2 that is less than or equal to n.\n\n### Signature\ndef highest_Power_of_2(n):\n\n### Test\nassert candidate(10) == 8",
    "timestamp": "2025-10-17T16:21:29.663314",
    "response_time": "1.87",
    "context": "{\"function_name\": \"highest_Power_of_2\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 389,
    "solution": "def find_lucas(n):\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        a, b = 2, 1\n        for _ in range(2, n + 1):\n            a, b = b, a + b\n        return b",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the n'th lucas number.\n\n### Signature\ndef find_lucas(n):\n\n### Test\nassert candidate(9) == 76",
    "timestamp": "2025-10-17T16:21:32.152754",
    "response_time": "2.49",
    "context": "{\"function_name\": \"find_lucas\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 390,
    "solution": "def add_string(list_, string):\n    return [string.format(item) for item in list_]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to apply a given format string to all of the elements in a list.\n\n### Signature\ndef add_string(list_, string):\n\n### Test\nassert candidate([1,2,3,4],'temp{0}')==['temp1', 'temp2', 'temp3', 'temp4']",
    "timestamp": "2025-10-17T16:21:33.681132",
    "response_time": "1.53",
    "context": "{\"function_name\": \"add_string\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 391,
    "solution": "def convert_list_dictionary(l1, l2, l3):\n    return [{l1[i]: {l2[i]: l3[i]}} for i in range(len(l1))]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to convert more than one list to nested dictionary.\n\n### Signature\ndef convert_list_dictionary(l1, l2, l3):\n\n### Test\nassert candidate([\"S001\", \"S002\", \"S003\", \"S004\"],[\"Adina Park\", \"Leyton Marsh\", \"Duncan Boyle\", \"Saim Richards\"] ,[85, 98, 89, 92])==[{\"\"\"S001\"\"\": {\"\"\"Adina Park\"\"\": 85}}, {\"\"\"S002\"\"\": {\"\"\"Leyton Marsh\"\"\": 98}}, {\"\"\"S003\"\"\": {\"\"\"Duncan Boyle\"\"\": 89}}, {\"\"\"S004\"\"\": {\"\"\"Saim Richards\"\"\": 92}}]",
    "timestamp": "2025-10-17T16:21:35.155496",
    "response_time": "1.47",
    "context": "{\"function_name\": \"convert_list_dictionary\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 392,
    "solution": "def get_max_sum (n):\n    if n < 12:\n        return n\n    return max(get_max_sum(n // 2) + get_max_sum(n // 3) + get_max_sum(n // 4) + get_max_sum(n // 5), n)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\n\n### Signature\ndef get_max_sum (n):\n\n### Test\nassert get_max_sum(60) == 106",
    "timestamp": "2025-10-17T16:21:37.214880",
    "response_time": "2.06",
    "context": "{\"function_name\": \"get_max_sum \"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 393,
    "solution": "def max_length_list(input_list):\n    max_list = max(input_list, key=len)\n    return len(max_list), max_list",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the list with maximum length.\n\n### Signature\ndef max_length_list(input_list):\n\n### Test\nassert candidate([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3, [13, 15, 17])",
    "timestamp": "2025-10-17T16:21:38.623862",
    "response_time": "1.41",
    "context": "{\"function_name\": \"max_length_list\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 394,
    "solution": "def check_distinct(test_tup):\n    return len(test_tup) == len(set(test_tup))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to check if given tuple contains no duplicates.\n\n### Signature\ndef check_distinct(test_tup):\n\n### Test\nassert candidate((1, 4, 5, 6, 1, 4)) == False",
    "timestamp": "2025-10-17T16:21:40.184525",
    "response_time": "1.56",
    "context": "{\"function_name\": \"check_distinct\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 395,
    "solution": "def first_non_repeating_character(str1):\n    char_count = {}\n    \n    for char in str1:\n        char_count[char] = char_count.get(char, 0) + 1\n    \n    for char in str1:\n        if char_count[char] == 1:\n            return char\n    \n    return None",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the first non-repeated character in a given string.\n\n### Signature\ndef first_non_repeating_character(str1):\n\n### Test\nassert candidate(\"abcabc\") == None",
    "timestamp": "2025-10-17T16:21:42.703237",
    "response_time": "2.52",
    "context": "{\"function_name\": \"first_non_repeating_character\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 396,
    "solution": "def check_char(string):\n    if string and string[0] == string[-1]:\n        return \"Valid\"\n    return \"Invalid\"",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to check whether the given string starts and ends with the same character or not.\n\n### Signature\ndef check_char(string):\n\n### Test\nassert candidate(\"abba\") == \"Valid\"",
    "timestamp": "2025-10-17T16:21:44.150271",
    "response_time": "1.44",
    "context": "{\"function_name\": \"check_char\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 397,
    "solution": "def median_numbers(a, b, c):\n    return sorted([a, b, c])[1]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the median of three numbers.\n\n### Signature\ndef median_numbers(a,b,c):\n\n### Test\nassert candidate(25,55,65)==55.0",
    "timestamp": "2025-10-17T16:21:45.769798",
    "response_time": "1.62",
    "context": "{\"function_name\": \"median_numbers\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 398,
    "solution": "def sum_of_digits(nums):\n    return sum(sum(int(digit) for digit in str(num)) for num in nums)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to compute the sum of digits of each number of a given list.\n\n### Signature\ndef sum_of_digits(nums):\n\n### Test\nassert candidate([10,2,56])==14",
    "timestamp": "2025-10-17T16:21:47.217374",
    "response_time": "1.45",
    "context": "{\"function_name\": \"sum_of_digits\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 399,
    "solution": "def bitwise_xor(test_tup1, test_tup2):\n    return tuple(a ^ b for a, b in zip(test_tup1, test_tup2))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to perform the mathematical bitwise xor operation across the given tuples.\n\n### Signature\ndef bitwise_xor(test_tup1, test_tup2):\n\n### Test\nassert candidate((10, 4, 6, 9), (5, 2, 3, 3)) == (15, 6, 5, 10)",
    "timestamp": "2025-10-17T16:21:48.977606",
    "response_time": "1.76",
    "context": "{\"function_name\": \"bitwise_xor\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 400,
    "solution": "def extract_freq(test_list):\n    unique_tuples = set(test_list)\n    return len(unique_tuples)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to extract the number of unique tuples in the given list.\n\n### Signature\ndef extract_freq(test_list):\n\n### Test\nassert candidate([(3, 4), (1, 2), (4, 3), (5, 6)] ) == 3",
    "timestamp": "2025-10-17T16:21:50.274359",
    "response_time": "1.29",
    "context": "{\"function_name\": \"extract_freq\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 401,
    "solution": "def add_nested_tuples(test_tup1, test_tup2):\n    return tuple(tuple(a + b for a, b in zip(inner1, inner2)) for inner1, inner2 in zip(test_tup1, test_tup2))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to perform index wise addition of tuple elements in the given two nested tuples.\n\n### Signature\ndef add_nested_tuples(test_tup1, test_tup2):\n\n### Test\nassert candidate(((1, 3), (4, 5), (2, 9), (1, 10)), ((6, 7), (3, 9), (1, 1), (7, 3))) == ((7, 10), (7, 14), (3, 10), (8, 13))",
    "timestamp": "2025-10-17T16:21:52.436779",
    "response_time": "2.16",
    "context": "{\"function_name\": \"add_nested_tuples\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 404,
    "solution": "def minimum(a, b):\n    return a if a < b else b",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the minimum of two numbers.\n\n### Signature\ndef minimum(a,b):\n\n### Test\nassert candidate(1,2) == 1",
    "timestamp": "2025-10-17T16:21:53.672607",
    "response_time": "1.23",
    "context": "{\"function_name\": \"minimum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 405,
    "solution": "def check_tuplex(tuplex, tuple1):\n    return tuple1 in tuplex",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to check whether an element exists within a tuple.\n\n### Signature\ndef check_tuplex(tuplex,tuple1):\n\n### Test\nassert candidate((\"w\", 3, \"r\", \"e\", \"s\", \"o\", \"u\", \"r\", \"c\", \"e\"),\"\"\"r\"\"\")==True",
    "timestamp": "2025-10-17T16:21:55.351422",
    "response_time": "1.68",
    "context": "{\"function_name\": \"check_tuplex\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 406,
    "solution": "def find_Parity(x):\n    return x % 2 != 0",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find whether the parity of a given number is odd.\n\n### Signature\ndef find_Parity(x):\n\n### Test\nassert candidate(12) == False",
    "timestamp": "2025-10-17T16:21:56.277279",
    "response_time": "0.92",
    "context": "{\"function_name\": \"find_Parity\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 407,
    "solution": "def rearrange_bigger(n):\n    digits = list(str(n))\n    length = len(digits)\n\n    # Step 1: Find the rightmost ascent\n    i = length - 2\n    while i >= 0 and digits[i] >= digits[i + 1]:\n        i -= 1\n\n    if i == -1:\n        return n  # No bigger number possible\n\n    # Step 2: Find the smallest digit on right side of the ascent\n    j = length - 1\n    while digits[j] <= digits[i]:\n        j -= 1\n\n    # Step 3: Swap the found digits\n    digits[i], digits[j] = digits[j], digits[i]\n\n    # Step 4: Reverse the digits after the position i\n    digits = digits[:i + 1] + digits[i + 1:][::-1]\n\n    return int(''.join(digits))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to create the next bigger number by rearranging the digits of a given number.\n\n### Signature\ndef rearrange_bigger(n):\n\n### Test\nassert candidate(12)==21",
    "timestamp": "2025-10-17T16:22:00.444721",
    "response_time": "4.17",
    "context": "{\"function_name\": \"rearrange_bigger\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 408,
    "solution": "from heapq import heappop, heappush\n\ndef push(nums1, nums2, k):\n    if not nums1 or not nums2 or k <= 0:\n        return []\n    \n    min_heap = []\n    for i in range(min(k, len(nums1))):\n        heappush(min_heap, (nums1[i] + nums2[0], i, 0))\n    \n    result = []\n    while k > 0 and min_heap:\n        sum_val, i, j = heappop(min_heap)\n        result.append([nums1[i], nums2[j]])\n        if j + 1 < len(nums2):\n            heappush(min_heap, (nums1[i] + nums2[j + 1], i, j + 1))\n        k -= 1\n    \n    return result",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find k number of smallest pairs which consist of one element from the first array and one element from the second array.\n\n### Signature\ndef k_smallest_pairs(nums1, nums2, k):\n\n### Test\nassert k_smallest_pairs([1,3,7],[2,4,6],2)==[[1, 2], [1, 4]]",
    "timestamp": "2025-10-17T16:22:05.211392",
    "response_time": "4.76",
    "context": "{\"function_name\": \"push\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 409,
    "solution": "def min_product_tuple(list1):\n    min_product = float('inf')\n    for a, b in list1:\n        product = a * b\n        if product < min_product:\n            min_product = product\n    return min_product",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the minimum product from the pairs of tuples within a given list.\n\n### Signature\ndef min_product_tuple(list1):\n\n### Test\nassert candidate([(2, 7), (2, 6), (1, 8), (4, 9)] )==8",
    "timestamp": "2025-10-17T16:22:07.869867",
    "response_time": "2.66",
    "context": "{\"function_name\": \"min_product_tuple\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 410,
    "solution": "def min_val(listval):\n    min_value = float('inf')\n    for item in listval:\n        if isinstance(item, (int, float)) and item < min_value:\n            min_value = item\n    return min_value if min_value != float('inf') else None",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find the minimum value in a given heterogeneous list.\n\n### Signature\ndef min_val(listval):\n\n### Test\nassert candidate(['Python', 3, 2, 4, 5, 'version'])==2",
    "timestamp": "2025-10-17T16:22:09.663319",
    "response_time": "1.79",
    "context": "{\"function_name\": \"min_val\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 411,
    "solution": "def snake_to_camel(word):\n    components = word.split('_')\n    return ''.join(x.capitalize() for x in components)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to convert the given snake case string to camel case string.\n\n### Signature\ndef snake_to_camel(word):\n\n### Test\nassert candidate('android_tv') == 'AndroidTv'",
    "timestamp": "2025-10-17T16:22:11.344667",
    "response_time": "1.68",
    "context": "{\"function_name\": \"snake_to_camel\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 412,
    "solution": "def remove_odd(l):\n    return [x for x in l if x % 2 == 0]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to remove odd numbers from a given list.\n\n### Signature\ndef remove_odd(l):\n\n### Test\nassert candidate([1,2,3]) == [2]",
    "timestamp": "2025-10-17T16:22:12.692474",
    "response_time": "1.34",
    "context": "{\"function_name\": \"remove_odd\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 413,
    "solution": "def extract_nth_element(list1, n):\n    return [t[n] for t in list1]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to extract the nth element from a given list of tuples.\n\n### Signature\ndef extract_nth_element(list1, n):\n\n### Test\nassert candidate([('Greyson Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)] ,0)==['Greyson Fulton', 'Brady Kent', 'Wyatt Knott', 'Beau Turnbull']",
    "timestamp": "2025-10-17T16:22:14.731584",
    "response_time": "2.04",
    "context": "{\"function_name\": \"extract_nth_element\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 414,
    "solution": "def overlapping(list1, list2):\n    return any(item in list2 for item in list1)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to check whether any value in a sequence exists in a sequence or not.\n\n### Signature\ndef overlapping(list1,list2):\n\n### Test\nassert candidate([1,2,3,4,5],[6,7,8,9]) == False",
    "timestamp": "2025-10-17T16:22:16.230296",
    "response_time": "1.50",
    "context": "{\"function_name\": \"overlapping\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 415,
    "solution": "def max_Product(arr):\n    if len(arr) < 2:\n        return None\n    \n    arr.sort()\n    return (arr[-1], arr[-2])",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find a pair with highest product from a given array of integers.\n\n### Signature\ndef max_Product(arr):\n\n### Test\nassert candidate([1,2,3,4,7,0,8,4]) == (7,8)",
    "timestamp": "2025-10-17T16:22:17.787905",
    "response_time": "1.56",
    "context": "{\"function_name\": \"max_Product\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 417,
    "solution": "def group_tuples(Input):\n    from collections import defaultdict\n    \n    grouped = defaultdict(list)\n    \n    for item in Input:\n        grouped[item[0]].append(item[1])\n    \n    result = []\n    for key, values in grouped.items():\n        result.append((key, *values))\n    \n    return result",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to find common first element in given list of tuple.\n\n### Signature\ndef group_tuples(Input):\n\n### Test\nassert candidate([('x', 'y'), ('x', 'z'), ('w', 't')]) == [('x', 'y', 'z'), ('w', 't')]",
    "timestamp": "2025-10-17T16:22:19.981894",
    "response_time": "2.19",
    "context": "{\"function_name\": \"group_tuples\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 418,
    "solution": "def Find_Max(lst):\n    if not lst:\n        return None\n    return max(lst, key=len)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the element of a list having maximum length.\n\n### Signature\ndef Find_Max(lst):\n\n### Test\nassert candidate([['A'],['A','B'],['A','B','C']]) == ['A','B','C']",
    "timestamp": "2025-10-17T16:22:21.477589",
    "response_time": "1.49",
    "context": "{\"function_name\": \"Find_Max\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 419,
    "solution": "def round_and_sum(list1):\n    total_sum = sum(round(num) for num in list1)\n    return total_sum * len(list1)",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\n\n### Signature\ndef round_and_sum(list1):\n\n### Test\nassert candidate([22.4, 4.0, -16.22, -9.10, 11.00, -12.22, 14.20, -5.20, 17.50])==243",
    "timestamp": "2025-10-17T16:22:23.080431",
    "response_time": "1.60",
    "context": "{\"function_name\": \"round_and_sum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 420,
    "solution": "def cube_Sum(n):\n    return sum((2 * i) ** 3 for i in range(1, n + 1))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the cube sum of first n even natural numbers.\n\n### Signature\ndef cube_Sum(n):\n\n### Test\nassert candidate(2) == 72",
    "timestamp": "2025-10-17T16:22:24.502115",
    "response_time": "1.42",
    "context": "{\"function_name\": \"cube_Sum\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 421,
    "solution": "def concatenate_tuple(test_tup):\n    return '-'.join(map(str, test_tup))",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to concatenate each element of tuple by the delimiter.\n\n### Signature\ndef concatenate_tuple(test_tup):\n\n### Test\nassert candidate((\"ID\", \"is\", 4, \"UTS\") ) == \"\"\"ID-is-4-UTS\"\"\"",
    "timestamp": "2025-10-17T16:22:25.616474",
    "response_time": "1.11",
    "context": "{\"function_name\": \"concatenate_tuple\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 422,
    "solution": "def find_Average_Of_Cube(n):\n    if n <= 0:\n        return 0\n    sum_of_cubes = sum(i**3 for i in range(1, n + 1))\n    average = sum_of_cubes / n\n    return average",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a python function to find the average of cubes of first n natural numbers.\n\n### Signature\ndef find_Average_Of_Cube(n):\n\n### Test\nassert candidate(2) == 4.5",
    "timestamp": "2025-10-17T16:22:27.536083",
    "response_time": "1.92",
    "context": "{\"function_name\": \"find_Average_Of_Cube\"}"
  },
  {
    "dataset_name": "mbpp_sanitized_chatgpt4omini_td",
    "dataset_row_id": 424,
    "solution": "def extract_rear(test_tuple):\n    return [s[-1] for s in test_tuple]",
    "llm_name": "openai/gpt-4o-mini-2024-07-18",
    "prompt": "### Prompt\nWrite a function to extract only the rear index element of each string in the given tuple.\n\n### Signature\ndef extract_rear(test_tuple):\n\n### Test\nassert candidate(('Mers', 'for', 'Vers') ) == ['s', 'r', 's']",
    "timestamp": "2025-10-17T16:22:28.726614",
    "response_time": "1.19",
    "context": "{\"function_name\": \"extract_rear\"}"
  }
]